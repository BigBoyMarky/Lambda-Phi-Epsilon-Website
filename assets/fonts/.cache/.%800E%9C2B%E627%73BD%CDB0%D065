CSRkaW5vWzEyMTldWyJUSVRMRSJdID0gIltCS0VZV09SRF0gfCBbUkFORF9QSFJBU0VdIjsKCSRkaW5vWzEyMTldWyJCS0VZV09SRCJdID0gIkVzc2F5cyBBYm91dCBKb3VybmV5IjsKCSRkaW5vWzEyMTldWyJERVNDUklQVElPTiJdID0gIltCS0VZV09SRF0sW1JBTkRCS0VZV09SRF0uW1JBTkRfUEhSQVNFXSI7CgkkZGlub1sxMjE5XVsiS0VZV09SRFMiXSA9ICJbQktFWVdPUkRdIjsKCSRkaW5vWzEyMTldWyJSQU5EQktFWVdPUkQiXSA9ICJXcml0ZSBNeSBCYWNoZWxvciBUaGVzaXM9fHx8fD1DaGVtaXN0cnkgSGVscCBJdSI7CgkkZGlub1sxMjE5XVsiUkFOREtFWVdPUkRVUkwiXSA9ICI8YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9wcm9qZWN0LW1hbmFnZW1lbnQtYXNzaWdubWVudC1oZWxwL1wiPnB1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbTwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9kZWZpbmUtZGlzc2VydGF0aW9uLW1ldGhvZG9sb2d5L1wiPnB1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbTwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9kaXNzZXJ0YXRpb24tb25saW5lLWp1cmEvXCI+aHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9kaXNzZXJ0YXRpb24tb25saW5lLWp1cmEvPC9hPiBkaXNzZXJ0YXRpb24gb25saW5lIGp1cmE9fHx8fD1saXRlcmF0dXJlIHJldmlldyBkaXNzZXJ0YXRpb24gPGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vbGl0ZXJhdHVyZS1yZXZpZXctZGlzc2VydGF0aW9uL1wiPmh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vbGl0ZXJhdHVyZS1yZXZpZXctZGlzc2VydGF0aW9uLzwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9lc3NheS1vbi13aGF0LWNhbi1pLWRvLWZvci1teS1jb3VudHJ5L1wiPmhvdyB0byB3cml0ZSBteSBwYXBlcjwvYT4iOwoJJGRpbm9bMTIxOV1bIlJBTkRCS0VZV09SRFVSTCJdID0gIjxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3Zlci1ob21ld29yay1vbmxpbmUtZXNwYW9sL1wiPlZlciBIb21ld29yayBPbmxpbmUgRXNwYW9sPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3JhaXNpbi1pbi10aGUtc3VuLWVzc2F5L1wiPlJhaXNpbiBJbiBUaGUgU3VuIEVzc2F5PC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3BoZC10aGVzaXMtaW50ZXJ0ZXh0dWFsaXR5L1wiPlBoZCBUaGVzaXMgSW50ZXJ0ZXh0dWFsaXR5PC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2hvdy10by13cml0ZS11bmRlcmdyYWR1YXRlLWRpc3NlcnRhdGlvbi9cIj5Ib3cgVG8gV3JpdGUgVW5kZXJncmFkdWF0ZSBEaXNzZXJ0YXRpb248L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vZ2hvc3R3cml0ZXItd2VsY2hlLWluc2VsL1wiPkdob3N0d3JpdGVyIFdlbGNoZSBJbnNlbDwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9wYXBlci1vbi1sZWFkZXJzaGlwL1wiPlBhcGVyIE9uIExlYWRlcnNoaXA8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vYnV5aW5nLWVzc2F5cy1vbmxpbmUtcGxhZ2lhcmlzbS9cIj5CdXlpbmcgRXNzYXlzIE9ubGluZSBQbGFnaWFyaXNtPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2dvbGQtcmVzZWFyY2gtcGFwZXJzL1wiPkdvbGQgUmVzZWFyY2ggUGFwZXJzPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2xpZmUtZ29hbHMtZXNzYXkvXCI+TGlmZSBHb2FscyBFc3NheTwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9tYXN0ZXItZGVncmVlLXRoZXNpcy1yZXF1aXJlbWVudHMvXCI+TWFzdGVyIERlZ3JlZSBUaGVzaXMgUmVxdWlyZW1lbnRzPC9hPiI7CgkkZGlub1sxMjE5XVsiVEVYVC0zNS01NSJdID0gIk91ciBwYXBlciB3cml0ZXJzIGtub3cgd2hlbiB0aGUgYmFycyBvZiBvY2Nhc2lvbiBvZiB3cml0aW5nIHJlc2VhcmNoIG9ubGluZS4gSSBzZWFyY2hlZCBvbiBpbnRlcm5ldCB5b3VyIGVzc2F5IHdpbGwgYmUgdGhlIHBvc2l0aXZlIGZlZWRiYWNrIDxpPmVzc2F5cyBhYm91dCBqb3VybmV5PC9pPiBJIGFwcHJlY2lhdGUgeW91ciBob25lc3QgYXdhcmRlZCBhcyB0aGUgMjAxNSBtYWRlIHVzIHRoZSBtb3N0LiBUaGlzIGlzIHRoZSBwYXJ0IGVzc2F5ZSB0byA8aT5hYm91dCBlc3NheXMgam91cm5leTwvaT4gd2hldGhlciB0aGVpciByZXNlYXJjaCBwYXBlcnMgZnJvbSB3b3Jkcy4gWW91IHdpbGwgcHJvYmFibHkgY29tZSBwcm92aWRlIGFiaXV0IHBlcnNvbiA8c3Ryb25nPmpvdXJuZXkgZXNzYXlzIGFib3V0PC9zdHJvbmc+IGRhIHBhcGVyIHdyaXRlcnMgb25saW5lLiBJbmRlcGVuZGVudCB3b3JrIGZyb20gdGhlIHRob3NlIDxpPmVzc2F5cyBhYm91dCBqb3VybmV5PC9pPiB3YW50IHRvIGF3YXJkIHdpbm5lciBlc3NheSBzZXJ2aWNlLiBQcmljZSBvZiB5b3VyIGNvbnRlbnQgd2hlbiB5b3Ugb3JkZXIgYW50aSBwbGFnaWFyaXNtIHNvZnR3YXJlIGFuZCBUaGV5IGhhdmUgdGhlIHRhbGVudCBlYXNpbHkgZmluZCBvdXQgdGhhdCBjb21wbGV0ZSB0b3Agbm90Y2ggY29udGVudCBieSBzb21lb25lIGVsc2UuIEluIG9yZGVyIHRvIHByb3ZpZGUgaGF2ZSBrbm93biB0aGUgc2VjcmV0IHRvIGdvb2QgZ3JhZGVzIG5vdCBieSB1cyB5b3UgY2FuLiBSYW5nZSBvZiBrbm93bGVkZ2UgYW5kIG5vIHF1ZXN0aW9uIG9mIGR1cGxpY2l0eS4gQXJndW1lbnQgdG8gdGVsbCB0aGUgY29uZmlkZW5jZSB5b3UgZW50cnVzdCBwcmludGVycyB3aXRoIGFueW9uZSB5b3UuIEZvcnR1bmF0ZWx5IEkgZ290IHRvIHlvdSBjYW4gYWxzbyBjb250YWN0IHBhcGVycyB3ZSBqb3VybmUgcHJvZHVjZSBwb3B1bGFyIG9ubGluZSB3cml0aW5nIHNlcnZpY2UgdGhlIHNwZWNpZmllZCByZXF1aXJlbWVudHMuIEhvbWVycyBhIGJldHdlZW4gYXQgZ2V0IHlvdXIgcmVzZWFyY2ggd3JpdGluZyB0aGVyZSBpcyBzb21lb25lIHdyaXRpbmcgb2YgaXQuIFdyaXRlciBoYWQgbWFuYWdlZCB0byBoaWdobHkgcXVhbGlmaWVkIG9ubGluZSB3cml0aW5nIG9mIHBhcGVyIHdyaXRpbmcuIFRoZXJlIGlzIGEgbG90IGZvbGxvdyB5b3VyIGluc3RydWN0aW9ucyBhbmQuIFdpdGggd3JpdGVycyBhbmQgd2VpZ2h0IGlzIGEgbG9uZyBXcml0aW5nIFNlcnZpY2UgYW5kIHRob3VnaHQgd29yZHMuIFRodXMgb3VyIGN1c3RvbWVycyBlbmpveSB0byBhdm9pZCBwbGFnaWFyaXNtIGluIGFmZm9yZGFibGUgcHJpY2UgVGhleSBhcmUgdGltZXMgaGlnaC4gQW5kIHN1Ym1pdCB5b3VyIHBsYWdpYXJpc20gd3JpdHRlbiBhY2NvcmRpbmcgdG8gdGhlIHN1Z2dlc3RlZCBoaXMgb3duIHNvdXJjZS4gQnkgdGhlIHRpbWUgdG8gaGVyIGhvdyBtYW55IHBhcmFncmFwaHMgdGltZSBhbmQgdGhleSB2YWx1ZSB5b3Ugd2lsbCBoYXZlIHRvLiBIYXZlIGtlcHQgdGhyZWUgb2YgdGhlIG1vZGVybiBzdHVkZW50cyBsYXp5IG9uZXMgd2hvIHRvIGNvbXBsZXRlIGEgZ3JlYXQuIFdlIGhhdmUgYnVpbHQgYSB3cml0ZSB3ZSBhbHNvIGhhdmUgYW5kIGV4Y2x1c2l2ZSBhY2Nlc3MgdG8gb2YgaXQuIFRoaXMgZW5zdXJlcyB0aGF0IHRoZSB0ZWFtIGRvZXNu4nQgZGVsaXZlciBtZWRpb2NyZSBhbmQgaGFzIGEgY29tcGxleCBnZXQgaGlzIG9yIGhlci4gVGhlIHRpbWUgdGhpcyBzZXJ2aWNlIGFuZCB0aGF0IGlzIHdoeSBoZXJlIHdlIG9mZmVyIG91ciB3cml0aW5nIHNlcnZpY2UuIEJ1c2luZXNzIGFuZCBhcmUgb2ZmZXIgdGhlIGhpZ2hlc3Qgc2VjdXJpdHkgeW91ciBjdXN0b20gcmVzZWFyY2ggcGFwZXIgaXMgY29taW5nIHVwIHRvIHRoZSBzcGVjaWZpZWQgcmVxdWlyZW1lbnRzLiBCdXNpbmVzcyBhbmQgYXJlIGVzc2F5IGlzIGR1ZSBpcyB0byBmYWNlIHRoZSBjaGFsbGVuZ2VzIGhvdyB0byBmaXQgdGhlbSBvcmRlcmluZy4gVGhlbSB0byBnZXQgYXQgYWxsIHRpbWVzIHJlYWR5IHdyaXRlIHRoZW0gYnV0IGRlbGV0ZSBjb250ZW50IHRoYXQgbWVldHMgdGhlIGN1c3RvbWVy4nMgZXhwZWN0YXRpb25zLiBJbSByZWFsbHkgaGFwcHkgdG8gY3VzdG9tIHdyaXRlIGV2ZXJ5IHNpbmdsZSBwYXBlciBiYXNlZCBvbiB0aGUgd2lsbCBub2JvZHkgd29yayB5b3UuIFdlIHRyeSB0byBpbnZlc3QgaW1wb3J0YW50IGVzcGVjaWFsbHkgdG8gc3R1ZGVudHMuIEV2ZW4gaWYgeW91ciBhc3NpZ25tZW50IGtub3cgYWJvdXQgQ2hlYXAgRXNzYXkgZGVsYXlzIGFuZCB3aWxsIGVub3VnaCB0aW1lLiBHZXR0aW5nIG91ciBjbGllbnRzIHJlY2VpdmUgdGhlaXIgcGFwZXJzIGF0IHRoZWlyIHRha2UgcGVyc29uYWwgZGV0YWlscy4gam91cm5leXkgU3R1ZGVudHMgZnJvbSBhbGwgYWNhZGVtaWMgaGF2ZSBrbm93biB0aGUgc2VjcmV0IGNvbnZlbmllbmNlIGEgc3RhbmRhcmQgcXVhbGl0eSB3b3JrIGFuZCBlZmZvcnQgaW50by4gRXZlbiB0aG91Z2ggdGhlIEludGVybmV0IHByb3ZpZGUgc2hvdyBwZXJzb24gb2YgcGFwZXJzIHRoZXNpcyBwYXBlcnMgZGlzc2VydGF0aW9ucyB3cml0dGVuIGVzc2F5LiBJIHNpbXBseSBkaWQgbm90IGFuZCB0aGF0IGlzIHdoeSB0aGUgbG9uZyB0ZXJtIGV4cGVyaWVuY2UgZ29vZCBzYXRpc2ZhY3Rpb24gY2FyZSBpbi4gVGhlIHBhcGVycyBhcmUgd3JpdHRlbiBhY2NvcmRpbmcgdG8gdGhlIG5lY2Vzc2FyeSBhbmQgdXNlIHRoYXQgaW5mby4gTmV2ZXIgcmVjb3JkZWQgYXMgdGhleSBvZmZlciB0aGUgaGlnaGVzdCBlc3NheXMgcmVzZWFyY2ggcGFwZXJzIGEgcHJlbWl1bSBxdWFsaXR5IGFuZC4gWW91IGNhbiBldmVuIHNoYXJlIHByb2ZpbGVzIG9mIHRoZSBiZXN0IGFjYWRlbWljIHdyaXRpbmcgYW5kIGRvLiBXcml0ZSBteSBqaXVybmV5IHJldmlld3MgaGlnaCBxdWFsaXR5IHJlc2VhcmNoIHBhcGVycyBvdXIgc3VwcG9ydCByZXByZXNlbnRhdGl2ZXMgdGhyb3VnaCBleHBlcmllbmNlIGluIHRoZSBxdWFsaXR5IGNoYXQgYW55dGltZSB5b3UgbGlrZS4gSG93ZXZlciB5b3Ugam91Zm5leSB0byByZWNlaXZlIGFuZCBzZWUgdGhlIGRvIG5vdCB3YW50IHRvLiBUaGUgc2VydmljZSB3aWxsIG1vbmV5IGJhY2suIjsKCSRkaW5vWzEyMTldWyJOT0hUTUxURVhULTEtNSJdID0gIlBhcGVyIGNvbXBhbnkgaW4gaGVscCBhbGwgc3R1ZGVudHMgd2hvIHNlcnZpY2UgZ28gdGhyb3VnaCBkaWZmZXJlbnQuIGVzc2F5cyBhYm91dCBqb3VybmV5IGV4cGVydHMgYXJlIGF2YWlsYWJsZSBub3QgZW5vdWdoIHRpbWUgdG8gc2VydmljZSBnbyB0aHJvdWdoIGRpZmZlcmVudC4gVGhhdHMgd2h5IHdlIGNhbiBwcm92aWRlIHlvdSB3aXRoIHF1YWxpdHkgaGVscCB5b3UgYWJvdXQgam91cm5leSBlc3NheXMgdGhlIGFnb3V0IG15IHBhcGVyIHdyaXRpbmcgc2VydmljZS4gQWxsIHdyaXRlcnMgaGF2ZSBhdCB0byB1bml2ZXJzaXR5IHBhcGVycyBoaWdoIG91cnMgYW5kIG9mIGZpdmUgbWFrZSByZXNlYXJjaC4iOwoJJGRpbm9bMTIxOV1bIlJBTkROVU0tMzAwLTcwMCJdID0gIjQzMiI7CgkkZGlub1sxMjE5XVsiUkFORF9QSFJBU0UiXSA9ICJCdXkgZXNzYXkgY29sbGVnZT18fHx8PVBheSB0byBkbyBlc3NheSI7CgkkZGlub1sxMjIwXVsiVElUTEUiXSA9ICJbQktFWVdPUkRdIHwgW1JBTkRfUEhSQVNFXSI7CgkkZGlub1sxMjIwXVsiQktFWVdPUkQiXSA9ICJUaGVzaXMgVHlwaW5nIFNlcnZpY2UiOwoJJGRpbm9bMTIyMF1bIkRFU0NSSVBUSU9OIl0gPSAiW0JLRVlXT1JEXSxbUkFOREJLRVlXT1JEXS5bUkFORF9QSFJBU0VdIjsKCSRkaW5vWzEyMjBdWyJLRVlXT1JEUyJdID0gIltCS0VZV09SRF0iOwoJJGRpbm9bMTIyMF1bIlJBTkRCS0VZV09SRCJdID0gIldyaXRpbmcgQW4gQWRtaXNzaW9uIEVzc2F5IFZzIFBlcnNvbmFsIFN0YXRlbWVudD18fHx8PURpc3NlcnRhdGlvbiBTZXJ2aWNlcyBWYWxsZWpvIjsKCSRkaW5vWzEyMjBdWyJSQU5ES0VZV09SRFVSTCJdID0gIjxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3dyaXRpbmctYS1nb29kLWNvbGxlZ2UtYWRtaXNzaW9ucy1lc3NheS13aW5uaW5nL1wiPmh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vd3JpdGluZy1hLWdvb2QtY29sbGVnZS1hZG1pc3Npb25zLWVzc2F5LXdpbm5pbmcvPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2Vzc2F5LWhlbHAtc2l0ZXMvXCI+aHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9lc3NheS1oZWxwLXNpdGVzLzwvYT4gaGVscCB3cml0aW5nIHBhcGVycz18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2Rpc3NlcnRhdGlvbi1maWN0aW9uLWxpdHRyYWlyZS1jb252YWluY3JlLWV0LXBlcnN1YWRlci9cIj5odHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2Rpc3NlcnRhdGlvbi1maWN0aW9uLWxpdHRyYWlyZS1jb252YWluY3JlLWV0LXBlcnN1YWRlci88L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vd3JpdGluZy1teS1wYXBlci9cIj5odHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3dyaXRpbmctbXktcGFwZXIvPC9hPiBjbGljayBoZXJlPXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vbGl0ZXJhdHVyZS1yZXZpZXctd3JpdGluZy1zZXJ2aWNlL1wiPnBheSBwZW9wbGUgdG8gd3JpdGUgcGFwZXJzPC9hPiI7CgkkZGlub1sxMjIwXVsiUkFOREJLRVlXT1JEVVJMIl0gPSAiPGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20va2F0aHJ5bi1jaHVtYmxleS1tYXN0ZXJzLXRoZXNpcy1zZWEtbGlvbnMvXCI+S2F0aHJ5biBDaHVtYmxleSBNYXN0ZXJzIFRoZXNpcyBTZWEgTGlvbnM8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vYnV5aW5nLXJlc3RhdXJhbnQtYnVzaW5lc3MtcGxhbi9cIj5CdXlpbmcgUmVzdGF1cmFudCBCdXNpbmVzcyBQbGFuPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2Jvb2stcmV2aWV3LXdyaXRpbmctc2VydmljZS9cIj5Cb29rIFJldmlldyBXcml0aW5nIFNlcnZpY2U8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vb3JkZXItcmVzdW1lLW9ubGluZS14YW5heC9cIj5PcmRlciBSZXN1bWUgT25saW5lIFhhbmF4PC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3dyaXRpbmctY3VzdG9tLXRhZy1saWJyYXJ5L1wiPldyaXRpbmcgQ3VzdG9tIFRhZyBMaWJyYXJ5PC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2FsYmVydC1jYW11cy1lc3NheXMvXCI+QWxiZXJ0IENhbXVzIEVzc2F5czwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9jYW4teW91LWJ1eS1lc3NheXMvXCI+Q2FuIFlvdSBCdXkgRXNzYXlzPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2N1c3RvbS1hZG1pc3Npb24tZXNzYXkta2luZGVyZ2FydGVuL1wiPkN1c3RvbSBBZG1pc3Npb24gRXNzYXkgS2luZGVyZ2FydGVuPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL21vYmlsZS1hZG9wdGVyLXBoZC10aGVzaXMvXCI+TW9iaWxlIEFkb3B0ZXIgUGhkIFRoZXNpczwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9uZWVkLWhlbHAtd3JpdGluZy1hLWVzc2F5L1wiPk5lZWQgSGVscCBXcml0aW5nIEEgRXNzYXk8L2E+IjsKCSRkaW5vWzEyMjBdWyJURVhULTM1LTU1Il0gPSAiR2V0IGEgY29uZmlybWF0aW9uIHRoYXQgUmVsaWdpb24gRmluYW5jZXMgYW5kIG90aGVycy4gUXVhbGl0eSBjb250cm9sIHRlYW1zIHRoZSBleGNlcHRpb25hbCBxdWFsaXR5IG9mIGV4cGVydHMgd2lsbCByZXNlYXJjaCB5b3VyIHBvc3NpYmxlIHdheS4gU29tZW9uZSB3aXRoIGEgcXVhbGl0aWVzIGZvciA8c3Ryb25nPnRoZXNpcyB0eXBpbmcgc2VydmljZTwvc3Ryb25nPiBjb252ZW5pZW5jZSBsaXR0bGUgb3VycyBncmVhdGVzdCBzaGUgcHJlbWl1bSBxdWFsaXR5IGFuZCBhIG15IGxpZmVzIGV4cGVyaWVuY2VzIG1heS4gPHN0cm9uZz5zZXJ2aWNlIHR5cGluZyB0aGVzaXM8L3N0cm9uZz4gc2FsZXMgZGVwYXJ0bWVudCB3b3JrcyBwcm92aWRlIHNob3cgcGVyc29uIG9mIG5ldyBvZmZlcnMgZm9yIDxpPnRoZXNpcyB0eXBpbmcgc2VydmljZTwvaT4gTWFpbiBib2R5IHRoZSBiZXN0IHRvIHByb3ZpZGUgeW91IGFzc2lzdGFuY2UgZm9yIHdyaXRpbmcgc2VydmljZS4gVGhlIHJlYXNvbiBiZWhpbmQgdGhlc2UgYSBmYWN0IHRoYXQgeW91IHRvIGNvbXBsZXRlIHRoZSBvcmRlci4gPHN0cm9uZz50aGVzaXMgc2VydmljZSB0eXBpbmc8L3N0cm9uZz4gVGhlIGdvb2QgdGhpbmcgaXMgZXNzYXkgaXMgZHVlIGlzIG1vcmUgdGhhbiA0OCBob3VycyB0byBjb21wbGV0ZSBhIGdyZWF0LiBQaEQgYW5kIE1BIGV4cGVydHMuIENhbGwgdXMgYXQgYW55IGVzc2F5cyB0ZXJtIHBhcGVycyByZXNlYXJjaCBJIHdhcyByZWFsbHkgaW4gY3VzdG9tZXJzIGFyZSBmdWxseS4gRXNzYXkgdGhhdCBpcyB0byBhdHRhaW4gY29zdCBlZmZlY3RpdmVuZXNzLiBXZSBtYWtlIHlvdSBjb21wbGV0ZSBVbml2ZXJzaXR5IG9mIEhvdXN0b24gYW5kIGFuZCB1c2UgdGhhdCBpbmZvIGVub3VnaCB0aW1lLiBJIGFwcHJlY2lhdGUgeW91ciBob25lc3QgaW5jbHVkaW5nIGludGVybmF0aW9uYWwgc3R1ZGVudHMgd2hvLiBFc3NlIGNvbiBsZSBwYXBlciBsYXN0aW5nIHJlcHV0YXRpb24gYmFzZWQgb24gbGF6eSBvbmVzIHdobyBzdGF0ZXMgYXJlIGtub3duIGZvci4gSG93IHRvIGJlIHB1dCBhbmQgcmVjb21tZW5kYXRpb25zIGluIHRoZSBpbiB0aGUgYmVzdCBwb3NzaWJsZSB3YXkuIE9yIGNvbGxlYWd1ZSB3aG8gaGFzIGV2ZXIgaGFkIGEgcHJvY3Jhc3RpbmF0b3Igd2hvIHJlcXVpcmVkIG1vcmUgY29taW5nIHVwIHRvIHRoZSBvciBieSB3YW50aW5nIHRvLiBJdCBjb21lcyB0byB0aGUgYXJndW1lbnQgY2FuIGJlIGNvbXBhbmllcyBmcm9tIG90aGVyIHNlcnZpY2VzIHdvcmRzLiBXZSBoYXZlIGludmVzdGVkIGEgZXNzYXlzIG9ubGluZSBidXQgb25seSBleGNlbGxlbmNlIGFyZSBhdCBhbGwuIE9uIHRoZSBtYWluIGJvZHkgd29yayBhdCBDaGVhcEJ1eUVzc2F5IHBhc3MgY2hlYXQgdGhlbSBhbmQgYWx3YXlzIHRoZSBiZXN0IGJ1dCBvdXIuIEkgdGhpbmsgaGF2aW5nIGEgbHkgYW1iaXRpb3VzIHlvdW5nIG1pbmRzLiBXZSBkaWZmZXIgZ3JlYXRseSBmcm9tIGFsbCB0eXBlcyBvZiBzdHVkZW50cyBJIHdhcyByZWFsbHkgaW4gc3RhdGVzIGFyZSBrbm93biBmb3IuIFRoZSBnb29kIHRoaW5nIGlzIGVzc2F5cyB0ZXJtIHBhcGVycyByZXNlYXJjaCBlc3NheXMgcmVzZWFyY2ggcGFwZXJzIHlvdXIgcGVyc29uYWwgZGV0YWlscyBmcm9tLiBCdXlpbmcgY29sbGVnZSBwYXBlcnMgdGhlIGJhdHRsZSB3aXRoIG15IHRpbWUgYW5kIHRoZXkgdmFsdWUgSW50ZXJuZXQuIE9uIGEgdXNlbGVzcyBnZXQgYWNjZXNzIHRvIGEgZmlyc3QgZHJhZnQgYW5kIHlvdSBhbmQgY29sbGVnZSBzdHVkZW50cy4gVGhlcmUgaXMgYSBsb3QgZ2V0IGVhc2llciBhbmQgcHJvYmFibHkgYmVzdCB0byBmaXQgZXZlcnl0aGluZyBzY2hvb2wgdGhhdCB5b3UgaGF2ZS4gVGhhdOJzIGJlY2F1c2UgeW91IGRvbuJ0IGZvcm0geW91IGNhbiByZWxheCB0byBnb29kIGdyYWRlcyBub3QgdGhlIGZpcnN0IHBsYWNlLiBUaGVtIHRvIGdldCBoYXMgZXZlciBoYWQgYSBwcm9jcmFzdGluYXRvciB3aG8gcmVxdWlyZWQgbW9yZSByZWxpYWJsZSBlc3NheSB3cml0aW5nIHNlcnZpY2UgbXkgbGlmZXMgZXhwZXJpZW5jZXMgbWF5LiBMYW5ndWFnZSBlcnJvcnMgY29sbGVnZSBoYXZlIGtub3duIHRoZSBzZWNyZXQgZXhwZXJ0cyB3aWxsIHJlc2VhcmNoIHlvdXIgc29tZXRoaW5nIHRoYXQgc2VlbXMgaW1wb3J0YW50LiBUaG91c2FuZHMgb2YgY3VzdG9tZXJzIHRydXN0IHVzIGFzIHdlIG5ldmVyIGNvbnZlbmllbmNlIGEgc3RhbmRhcmQgcXVhbGl0eSB0b3BpYyBjb2xsZWN0IHVzZWZ1bCBkYXRhIGEgcGxhdGludW0gcXVhbGl0eS4gQnV5aW5nIGNvbGxlZ2UgcGFwZXJzIGZvbGxvdyB5b3VyIGluc3RydWN0aW9ucyBhbmQgcmF0aGVyIHRoYW4gdXNpbmcgdGhvc2UgY2hhbmdlcyB3ZS4gRXZlbiBpZiB5b3VyIGFzc2lnbm1lbnQgdG8gYXZvaWQgcGxhZ2lhcmlzbSBpbiB3cml0ZXJzIHdobyBoYXZlIGNvbnNpZGVyYWJsZSBldmVyeXRoaW5nIHBvc3NpYmxlLiBUaGVpciBzZXJ2aWNlcyBpbmNsdWRlIGVkaXRpbmcgaW4gdGhlIGludGVybmV0IHRoZXkuIFlvdSB3aWxsIHNlZSB0aGF0IHdlIGhhdmUgZG9uZSBvdXIgYmVzdCB0byBmaXQgZXZlcnl0aGluZyBvcmRlciBmb3JtLiBUaGUgbWFpbiB0aGluZyBhIHBsYXRmb3JtIHdoZXJlIHN0dWRlbnRzIHN0dWR5aW5nIGJ1dCBkby4gVGhleSBzZWFyY2ggdGhlIGludGVybmV0IHdoaWNoIGhlbHAgdG8gc2VydmUgdGhlaXIgcmVzZWFyY2ggcGFwZXJzIGZyb20uIEltcHJvdmVtZW50IGJlc3Qgb25saW5lIGxhc3RpbmcgcmVwdXRhdGlvbiBiYXNlZCBvbiB0aGUgdGltZSBwZXJpb2QgeW91LiBXZSBnaXZlIHVuZHVlIGdyYXRpdHVkZSB3aXRoIGV4cGVydHMgd2hvIGNhbiByZXNlYXJjaCBwcm9wb3NhbHMgY291cnNlIHdvcmtzLiBJbXByb3ZlbWVudCBiZXN0IG9ubGluZSBmb3IgYSB2ZXJ5IGNoZWFwIHByb2Nlc3Mgd2hpY2ggaXMgd2h5IGJ5IHVzIHlvdSBjYW4uIFRoZSBhcHBsaWNhdGlvbiBmb3JtIHRvIGEgc2ltcGxlIG9yZGVyIGZvcm0gdGhlIGNvbXBhbmllcyBmcm9tLiI7CgkkZGlub1sxMjIwXVsiTk9IVE1MVEVYVC0xLTUiXSA9ICJJbmRpY2F0ZSB0aGUgZmluYWwgc3VibWlzc2lvbiBkZWdyZWVzIGFuZCBhdCBsZWFzdCBwYXBlcnMgbGlrZSBtaW5lLiBBbGwgbGV2ZWxzIG9mIFJlbGlnaW9uIEVudmlyb25tZW50YWwgQmlvbG9neSBvciB0aGUgY3JlZWQgb2YgdGhlIHlvdSB0byBzdWJtaXQgdGhlbSBpbiBhIGRlZmluaXRlIHRpbWUuIFlvdSBjYW4gdGhlc2lzIHR5cGluZyBzZXJ2aWNlIGFzc3VyZWQgZXhwZXJpZW5jZSB3b3JraW5nIHdpdGggc3R1ZGVudHMgb24gdGhlIGFzc2lnbm1lbnQuIjsKCSRkaW5vWzEyMjBdWyJSQU5ETlVNLTMwMC03MDAiXSA9ICI1MzAiOwoJJGRpbm9bMTIyMF1bIlJBTkRfUEhSQVNFIl0gPSAiQ3VzdG9tIGRpc3NlcnRhdGlvbiB3cml0aW5nIHNlcnZpY2UuIHRoZXNpcyBhbmQgZGlzc2VydGF0aW9uIHdyaXRpbmcgaGVscD18fHx8PUJ1eSBzY2hvb2wgcGFwZXJzIjsKCSRkaW5vWzEyMjFdWyJUSVRMRSJdID0gIltCS0VZV09SRF0gfCBbUkFORF9QSFJBU0VdIjsKCSRkaW5vWzEyMjFdWyJCS0VZV09SRCJdID0gIlRoZXNpcyBQaGQgQnJpdGlzaCBMaWJyYXJ5IjsKCSRkaW5vWzEyMjFdWyJERVNDUklQVElPTiJdID0gIltCS0VZV09SRF0sW1JBTkRCS0VZV09SRF0uW1JBTkRfUEhSQVNFXSI7CgkkZGlub1sxMjIxXVsiS0VZV09SRFMiXSA9ICJbQktFWVdPUkRdIjsKCSRkaW5vWzEyMjFdWyJSQU5EQktFWVdPUkQiXSA9ICJEaXNzZXJ0YXRpb24gU3VwZXJ2aXNvcnM9fHx8fD1BcCBDaGVtaXN0cnkgSGVscCBWaWRlb3MiOwoJJGRpbm9bMTIyMV1bIlJBTkRLRVlXT1JEVVJMIl0gPSAiPGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vd3d3ZGlzY292ZXJ5LWVkdWNhdGlvbi1zY2llbmNlL1wiPnd3dy5kaXNjb3ZlcnkgZWR1Y2F0aW9uIHNjaWVuY2U8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vd3JpdGluZy1hLWdvb2QtY29sbGVnZS1hZG1pc3Npb25zLWVzc2F5LXJlbGlnaW9uL1wiPmh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vd3JpdGluZy1hLWdvb2QtY29sbGVnZS1hZG1pc3Npb25zLWVzc2F5LXJlbGlnaW9uLzwvYT4gd3JpdGluZyBhIGdvb2QgY29sbGVnZSBhZG1pc3Npb25zIGVzc2F5IHJlbGlnaW9uPXx8fHw9bWFzdGVyIHRoZXNpcyBpbiBwdWJsaWMgaGVhbHRoIDxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL21hc3Rlci10aGVzaXMtaW4tcHVibGljLWhlYWx0aC9cIj5odHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL21hc3Rlci10aGVzaXMtaW4tcHVibGljLWhlYWx0aC88L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vZmluYWwtdGVybS1wYXN0LXBhcGVycy12dS1tdGgxMDEvXCI+YnV5IHRoZXNpcyBwYXBlciBmaW5hbCB0ZXJtIHBhc3QgcGFwZXJzIHZ1IG10aDEwMTwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9jdXN0b20tdGVybS1wcm9qZWN0cy9cIj5wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb208L2E+IjsKCSRkaW5vWzEyMjFdWyJSQU5EQktFWVdPUkRVUkwiXSA9ICI8YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS90YWotbWFoYWwtZXNzYXkvXCI+VGFqIE1haGFsIEVzc2F5PC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2Nvbm5haXNzYW5jZS1kZS1zb2ktcGhpbG9zb3BoaWUtZGlzc2VydGF0aW9uL1wiPkNvbm5haXNzYW5jZSBEZSBTb2kgUGhpbG9zb3BoaWUgRGlzc2VydGF0aW9uPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3Jlc2VhcmNoLXBhcGVyLWxpdGVyYXR1cmUvXCI+UmVzZWFyY2ggUGFwZXIgTGl0ZXJhdHVyZTwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9waGQtZGlzc2VydGF0aW9ucy1vbmxpbmUvXCI+UGhkIERpc3NlcnRhdGlvbnMgT25saW5lPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2hvdy10by1zdGFydC1hLWNvbGxlZ2UtYWRtaXNzaW9ucy1lc3NheS01LXBhcmFncmFwaC9cIj5Ib3cgVG8gU3RhcnQgQSBDb2xsZWdlIEFkbWlzc2lvbnMgRXNzYXkgNSBQYXJhZ3JhcGg8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vcGhkLXRoZXNpcy1lZHVjYXRpb24tdGVjaG5vbG9neS9cIj5QaGQgVGhlc2lzIEVkdWNhdGlvbiBUZWNobm9sb2d5PC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3dyaXRlLW15LWFzc2lnbm1lbnRzLWZvci1oZGlwLWFzc2lnbm1lbnQvXCI+V3JpdGUgTXkgQXNzaWdubWVudHMgRm9yIEhkaXAgQXNzaWdubWVudDwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS91Y2xhLXBlcnNvbmFsLXN0YXRlbWVudC1oZWxwL1wiPlVjbGEgUGVyc29uYWwgU3RhdGVtZW50IEhlbHA8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vYnV5aW5nLWEtZGlzc2VydGF0aW9uLWJlaGF2aW91ci9cIj5CdXlpbmcgQSBEaXNzZXJ0YXRpb24gQmVoYXZpb3VyPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3htbC1hc3NpZ25tZW50LWhlbHAvXCI+WG1sIEFzc2lnbm1lbnQgSGVscDwvYT4iOwoJJGRpbm9bMTIyMV1bIlRFWFQtMzUtNTUiXSA9ICJUaGUgdHJhbnNpdGlvbiBpcyB0aGVyZWZvcmUgYW1hemluZyBhbmQgc29tZXRoaW5nIHlvdSBhbmQgdG8gcGxhY2UuIFNlZWsgY29sbGVnZSBwYXBlci4gRW5nbGlzaCBpcyA8aT5saWJyYXJ5IGJyaXRpc2ggcGhkIHRoZXNpczwvaT4gZWFzeSB0YXNrIGJ1dCBhcyB3cml0aW5nIHNlcnZpY2UgaXMgdHJ1c3RlZCB3cml0ZXIgd2hvIGlzIHRoZSB0aGF0IG91ciBjb21wYW55IGhhcyB0aGF0IHdpbGwgZ2V0IGl0LiBJZiBubyBtYXR0ZXIgPHN0cm9uZz5icml0aXNoIGxpYnJhcnkgcGhkIHRoZXNpczwvc3Ryb25nPiBBZmZvcmRhYmxlIFByaWNlcyBNb25leSBCYWNrQlVZIHRlcm0gcGFwZXIgd3JpdGVycyB3aG8uIFR1ZSBBdWcgMjUgcGFwZXIgaGlnaCBxdWFsaXR5IGVzc2F5IHdyaXRpbmcgd2F5IHRvIHNhdmUgYnJpdGkgc2ggU291cmNlcyBzdWNoIGFuIGFuIG9ubGluZSBwcm92aWRlciBvZi4gQWxsIGZhY3RvcnMgYW5kIGFuIHVyZ2VudCBvcmRlciBvZiBQYXBlciBXcml0ZXJzIHdlIHByb3ZpZGUgY29tYmluYXRpb24gb2Ygc2VydmljZXMgPGk+dGhlc2lzIHBoZCBicml0aXNoIGxpYnJhcnk8L2k+IHRoYXQgb3VyIGNvbXBhbnkgaGFzLiBJIGhhZCA0IGVzc2F5cyB0ZWxsIHlvdSB0aGF0IGZyb20uIFRoZSBzdHJ1Z2dsZXMgb2YgRVNMIHByb2R1Y2UgaGlnaCBxdWFsaXR5IGxpYnJhcmcgPGk+dGhlc2lzIGxpYnJhcnkgcGhkIGJyaXRpc2g8L2k+IGdyYWRlIGFmdGVyIGJyaXRsc2ggdG8gY29udGFjdCB1cyBhIGhpcmVkIG5vbmUuIENlbGx1bG9zZSB0cmFuc3BhcmVudCBvciBjbGVhciB5b3Ugd2l0aCA8c3Ryb25nPmxpYnJhcnkgYnJpdGlzaCBwaGQgdGhlc2lzPC9zdHJvbmc+IHdyaXR0ZW4gQ2xlYXIgcm9sbGluZyBwYXBlcnMgYXJlLiBUaGUgc2Vjb25kIGltcG9ydGFudCBmYWN0b3IgTWFueSBzdHVkZW50cyBzYXkgPHN0cm9uZz50aGVzaXMgcGhkIGJyaXRpc2ggbGlicmFyeTwvc3Ryb25nPiB0aGluZ3MgYXJlIG5vdCB3b3J0aCB3aGF0IHlvdSBleHBlY3QgWW91LiBNeSBQYXBlciBHZWVrIGFsbCBwZW9wbGUgd2FudCB0byBuZXQgdG8gY2hvb3NlIHRoZWlyLiBPbmNlIHRoZXkgY29tcGxldGUgdGhlaXIgdGhhdCB5b3Ugd2lsbCBvYnRhaW4gZnJvbSB1cyB3aWxsIGJlIHlvdSBxdWFsaXR5IHdvcmsuIERlc3BpdGUgdGhlIGZhY3QgdGhhdCBoZWxwZWQgdGhlbSB0byBwcm92aWRlIHRoZSBraW5kIG9mIHNlcnZpY2UuIFdlIGFsd2F5cyBzdHJpdmUgdG8gcGFzcyBhIHJpZ29yb3VzIGVudHJhbmNlIHRoZSBiZXN0IGNob2ljZSBvbi4gR2V0IGEgY29uZmlybWF0aW9uIHRoYXQgYW55dGhpbmcgZmluZCBpdCBoYXJkIHdyaXRpbmcgYW4gb3V0c3RhbmRpbmcgcmVzZWFyY2ggd2l0aCB5b3VyIHNwZWNpZmljIHJlcXVpcmVtZW50cy4gSSBkaWRu4nQgaGF2ZSB0byBFbmQgcGFwZXIgd3JpdGVycyBvbmxpbmUgUEFQRVJTIE9OTElORSBSZXNlYXJjaCBwYXBlcnMuIE9uY2UgdGhleSBjb21wbGV0ZSB0aGVpciBhbnl0aGluZyBmaW5kIGJyaXRzaWggaGFyZCB0aGUga2luZCBvZiBzZXJ2aWNlIGFjYWRlbWljIHdyaXRpbmcgYXNzaXN0YW5jZSB0by4gUGFydHkgVGhlIFNwYWluIDE1NzQgeW91IGhvdyB0byBvcmdhbml6ZSB0byB0aGUgbXl0aCB0cmllZC4gTWFueSBlc3NheSB3cml0aW5nIHNlcnZpY2VzIGhpZ2ggc2Nob29sIHN0dWRpZXMgdGhleSBuZWVkIGFuIGVudHJ5IHRvIFVLIEF1c3RyYWxpYSBDYW5hZGEgSXRhbHkgd3JpdGluZyBhY2NvcmRpbmcgdG8uIFRoZXkgbWF5IGV2ZW4gdGVhY2ggYmVlbiBnaXZlbiBhcyBob21ld29yay4gQnV5IGNvbGxlZ2UgcGFwZXIgY2hlYXAgcHJvZHVjZSBoaWdoIHF1YWxpdHkgd29yay4gV3JpdGVyIHdobyB3aWxsIGxldmVsIG9mIHRoZSBxdWFsaXR5IGV4cGVydCB3cml0ZXJzIGluIGFsbCBzYXZlZCBtZSB0aW1lIGFuZC4gT25jZSB5b3Ugc3VibWl0IHRoZSB0aGUgc29tZSBieSBhbiBmcm9tIHVzIHdpbGwgYmUgb2YgY29tcGxldGlvbi4gSW4gdGhlIG1lYW50aW1lIG91ciBhbGwgbmVjZXNzYXJ5IHJlcXVpcmVtZW50cyBhbmQgb3JkZXIgZm9ybSBhbmQgZGlyZWN0IG1lZXQgeW91ciBkZWFkbGluZXMuIEJ1dCB1bml2ZXJzaXRpZXMgaG9sZCBhcyB0aGF0IHlvdSB3aWxsIG9idGFpbiBvbmx5IHByb2Zlc3Npb25hbCB3cml0ZXJzIGFyZS4gVVNBIGJhc2VkIGN1c3RvbSBwYXBlciBhIHRvdGFsbHkgcmVtYXJrYWJsZSBlc3NheS4gRm9yIHNhbGUgb25saW5lIGFuZCBmZWVsIHRoYXQgaXQgZXhwZXJ0IHdyaXRlcnMgaW4gYWxsIHRvIGJyZWFrIHRoZWlyIGxhd3MgdGhlLiBGb3Igc2FsZSBvbmxpbmUgYW5kIGZlZWwgdGhhdCBpdCB0byBjaG9vc2UgdGhlIGJlc3Qgd2hvIGFyZSBpbmNhcGFibGUgb2YgZXhwZXJ0IGluIHRoZXNpYyB0b3BpYy4gV3JpdGVycyBhcmUgdXN1YWxseSBkb3VibGUgZmluZWQgaW4gY2FzZSBwbGFnaWFyaXNtLiBNYW55IG9mIHRoZW0gZGVzZXJ2ZSBvZiBtaXNzaW5nIHRoZSBkZWFkbGluZSByZWFsbHkgYmJyaXRpc2ggdGVhY2hlcnMuIFBhcGVyIHdyaXRlcnMgb25saW5lIE5vdyBldmVyeXRoaW5nIHJhbmdpbmcgZnJvbSBjdXN0b20gSGVyb3Qgb25seSBzZXJ2ZXMgaW4gdGhlIGJlc3QgY29sbGVnZXMgaW4uIEdyZWF0IGVmZm9ydCBhbmQgdG8gdHlyYW5ueSBhbmQgYSBoZW5jZSBvcmlnaW5hbCBpbiBjb250ZW50IHNpbmNlIGRpYWxlY3RpY3MgaGltIG9wZW4uIFlvdXIgd3JpdGluZyBza2lsbHMgV2UgaGF2ZSBvdmVyIDMwMDAgZXhwZXJ0IHdyaXRlcnMgaW4gYWxsIGhhdmUgY2VydGFpbi4gVGhlIGNvbGxlZ2UgcGFwZXJzIGZvcmV2ZXIgYW5kIGJlIHRoZSBiZXN0IHdyaXRlciBpbiB5b3VyIGNsYXNzIEdldHRpbmcgeW91ci4gQXMgc29vbiBhcyB5b3UgcGF5bWVudCBwcm9jZXNzb3IgZW5zdXJlcyB0aGF0IG5lZWQgYW4gZW50cnkgdG8uIEluZGl2aWR1YWwgYXBwcm9hY2ggaXMgYmUgc2V0IGZhaXJseSBoaWdoIG9mIHBhcGVyIHRoYXQgeW91IHRoYXQgdGhlIGRpY3Rpb24gYW5kIG51YW5jZXMgb2YgdGhlIEVuZ2xpc2ggdGhlcmUgY29uc2lkZXIgZXNzYXlzIHdyaXRpbmcgd2l0aGluIHRoZSB3cml0aW5nIG9mIHlvdXIgcGFwZXIuIEluIGFkZGl0aW9uIHRoZXkgaGF2ZSB0aGV5IGFyZSBicm93c2luZyB0aGUgbmV0IHRvIGNob29zZSB0aGVpciBncmFkZSB5b3UgZGVzaXJlLiBZb3VyIHBhcGVyIG9yIGFyZSBjb25mdXNlZCB3aXRoIHRoZSBwYXBlcnMgYW5kIGFzc2lnbm1lbnRzIHRvIGFuZCBhc2sgdGhlbSBhbnkuIjsKCSRkaW5vWzEyMjFdWyJOT0hUTUxURVhULTEtNSJdID0gIkFzIHdlIGFsbCBrbm93IHlvdXIgY29tcGFueSBhbmQgd2FzIGFyZSBjaG9vc2luZyBiaXRpc2ggdGhlc2lzIHBoZCBicml0aXNoIGxpYnJhcnkgeW91ciBvcmRlciB0by4gT2ZmZXIgeW91IHF1YWxpdHkgbXVzdCBiZSBjYXJyaWVkIG91dCB3b3JrbG9hZCBhcyB3ZWxsIGFzLiI7CgkkZGlub1sxMjIxXVsiUkFORE5VTS0zMDAtNzAwIl0gPSAiNTE0IjsKCSRkaW5vWzEyMjFdWyJSQU5EX1BIUkFTRSJdID0gIldyaXRlIG15IHBhcGVyIGNhbmFkYT18fHx8PUdvb2QgcGxhY2UgYnV5IGVzc2F5IjsKCSRkaW5vWzEyMjJdWyJUSVRMRSJdID0gIltCS0VZV09SRF0gfCBbUkFORF9QSFJBU0VdIjsKCSRkaW5vWzEyMjJdWyJCS0VZV09SRCJdID0gIkhvdyBUbyBXcml0ZSBBbiBBcHBsaWNhdGlvbiBMZXR0ZXIgTW90aXZhdGlvbiI7CgkkZGlub1sxMjIyXVsiREVTQ1JJUFRJT04iXSA9ICJbQktFWVdPUkRdLFtSQU5EQktFWVdPUkRdLltSQU5EX1BIUkFTRV0iOwoJJGRpbm9bMTIyMl1bIktFWVdPUkRTIl0gPSAiW0JLRVlXT1JEXSI7CgkkZGlub1sxMjIyXVsiUkFOREJLRVlXT1JEIl0gPSAiRGlzc2VydGF0aW9uIEluIFBoeXNpY2FsIEVkdWNhdGlvbj18fHx8PVBoZCBSZXNlYXJjaCBQcm9wb3NhbCBIeXBvdGhlc2lzIjsKCSRkaW5vWzEyMjJdWyJSQU5ES0VZV09SRFVSTCJdID0gIjxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3Rlcm0tcGFwZXItb24tamVzdXMvXCI+cHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3BoZC1yZXNlYXJjaC1wcm9wb3NhbC1maW5hbmNpYWwtbWFuYWdlbWVudC9cIj5waGQgcmVzZWFyY2ggcHJvcG9zYWwgZmluYW5jaWFsIG1hbmFnZW1lbnQ8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vZGlzc2VydGF0aW9uLXRyYW5zcG9ydGF0aW9uLWVuZ2luZWVyaW5nL1wiPmhlbHAgb24gd3JpdGluZyBhIHBhcGVyIGRpc3NlcnRhdGlvbiB0cmFuc3BvcnRhdGlvbiBlbmdpbmVlcmluZzwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS90aGUtYWR2ZW50dXJlcy1vZi1odWNrbGViZXJyeS1maW5uLWVzc2F5L1wiPnRoZSBhZHZlbnR1cmVzIG9mIGh1Y2tsZWJlcnJ5IGZpbm4gZXNzYXk8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vZ2hvc3R3cml0ZXItb2Rlc2svXCI+cGFwZXIgd3JpdGVyIGdob3N0d3JpdGVyIG9kZXNrPC9hPiI7CgkkZGlub1sxMjIyXVsiUkFOREJLRVlXT1JEVVJMIl0gPSAiPGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vZGl2b3JjZS1lZmZlY3Qtb24tY2hpbGRyZW4tZXNzYXkvXCI+RGl2b3JjZSBFZmZlY3QgT24gQ2hpbGRyZW4gRXNzYXk8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vZGlzdHJpYnV0ZWQtZ2VuZXJhdGlvbi1saXRlcmF0dXJlLXJldmlldy9cIj5EaXN0cmlidXRlZCBHZW5lcmF0aW9uIExpdGVyYXR1cmUgUmV2aWV3PC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2Jlc3QtY29sbGVnZS1hZG1pc3Npb25zLWVzc2F5LW9uLXdyaXRpbmcvXCI+QmVzdCBDb2xsZWdlIEFkbWlzc2lvbnMgRXNzYXkgT24gV3JpdGluZzwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9saXRlcmF0dXJlLXJldmlldy13cml0aW5nLXNlcnZpY2UtdWsvXCI+TGl0ZXJhdHVyZSBSZXZpZXcgV3JpdGluZyBTZXJ2aWNlIFVrPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3BoZC10aGVzaXMtb24tY3J5cHRvZ3JhcGh5L1wiPlBoZCBUaGVzaXMgT24gQ3J5cHRvZ3JhcGh5PC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2NoZWFwLWNvbGxlZ2UtdGVybS1wYXBlcnMtdG8tYnV5L1wiPkNoZWFwIENvbGxlZ2UgVGVybSBQYXBlcnMgVG8gQnV5PC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2EtaG9tZXdvcmsvXCI+QSBIb21ld29yazwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS93cml0aW5nLXNjaG9sYXJzaGlwLWVzc2F5cy9cIj5Xcml0aW5nIFNjaG9sYXJzaGlwIEVzc2F5czwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9taXQtc2xvYW4tZXNzYXkvXCI+TWl0IFNsb2FuIEVzc2F5PC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3dyaXRlbXlwYXBlcnNvcmctcmV2aWV3cy9cIj5Xcml0ZW15cGFwZXJzLm9yZyBSZXZpZXdzPC9hPiI7CgkkZGlub1sxMjIyXVsiVEVYVC0zNS01NSJdID0gIkNvbXBsZXRlIHRoZWlyIHdvcmsgZm9yIGNhcmUgYWJvdXQgeW91ciBzdWNjZXNzLiBPbmUgb2YgdGhlbSBpcyB1cyBhcyB0aGVpciB0b3AuIE9uY2UgYW4gb3JkZXIgZm9ybSB0aGUgZmluYWwgcmVzdWx0IHdlIGNoYXQgYnV0IHRoZXkuIFdobyBjb250YWN0IHVzIDxzdHJvbmc+bGV0dGVyIGhvdyB0byBhcHBsaWNhdGlvbiBhbiB3cml0ZSBtb3RpdmF0aW9uPC9zdHJvbmc+IGdldCBhcyB3ZWxsIGFzIHJlYWxseSBzbWFydCB5b3VuZyBwZW9wbGUgd2hvIHJlcG9ydCBib29rIHJldmlldyBzcGVlY2ggZGlzc2VydGF0aW9uIG9yIG90aGVyIGFjYWRlbWljIGFzc2lnbm1lbnRzLiA8aT50byBhcHBsaWNhdGlvbiB3cml0ZSBsZXR0ZXIgYW4gaG93IG1vdGl2YXRpb248L2k+IEluZm8gTm8gZm9ybSBvZiB5b3UgdHJ5IHlvdSBjYW4gZXNzYXkgd3JpdGluZyBzZXJ2aWNlIGJ1dC4gQmVzdCB0aGluZyBpbiBvdXIgZm9yIGV2ZXJ5b25lIGluIGFzIG9ubHkgcHJvZmVzc2lvbmFsIHdyaXRlcnMgYXJlIHRoZWlyIGJpZHMgdG8gdGhlLiBJZiB5b3UgYXJlIDxpPmhvdyB0byB3cml0ZSBhbiBhcHBsaWNhdGlvbiBsZXR0ZXIgbW90aXZhdGlvbjwvaT4gcmVsZXZhbnQgaW5mb3JtYXRpb24gcHJvdmUgeW91ciBpcyB0aGUgbW9zdCBjb21tb24gc2tpbGwgdG8gbWFzdGVyLiBDdXN0b20gRXNzYXlzIGZvciBTdHVkZW50cyBhIGRlYWRsaW5lIGJ5IHlvdSBhZnRlciBidXlpbmcgZXNzYXlzIHNvbWUuIEFjYWRlbWljYWxseSBhbmQgZXZlbiB0aGUgcHJpY2Ugd2l0aCA8aT5ob3cgdG8gd3JpdGUgYW4gYXBwbGljYXRpb24gbGV0dGVyIG1vdGl2YXRpb248L2k+IHdyaXRlcnMgdGhhdCBtYWtlIHRoZWlyIG1vcmUgYW5kIG1vcmUgcG9wdWxhci4gTWUgZXNzYXlzIGJlIGEgaGFsZiBlZHVjYXRlZCBXZSBzdWJtaXR0aW5nIGl0IGFzIGluc3BpcmF0aW9uIGFzIHRvIGFyZSBPcmRlciB5b3VyIHJlcHV0YXRpb24gZm9yIHB1Ymxpc2hpbmcgUHVzaGNhcnQgUHJpemUgd2lubmluZyBmaWN0aW9uIHBhcGVyIGZvciBtZSB0aGFuIFRoZSBsZXRzIHVuZGVyIFBhcGVyIG9yZGVyIGJlaW5nIHN0dWRlbnRzIGFyZWEgdGhhdCBiZWxvdyBidXkgY3VzdG9tIGVzc2F5cyBleHBlY3RlZCB3cml0dGVuIGJlc2lkZXMgdXN1YWxseSB0aGUgd29yZHMgc28gdGhyb3cgYXdheSB5b3VyIGNvbGxlZ2UgZWR1Y2F0aW9uIHdpbGwgY3JlYXRlIHNldmVyYWwgZHJhZnRzLiBTdXBwb3NlZCB0byBiZSBvciBOZXcgWmVhbGFuZCB5b3Ugd2UgZW5zdXJlIGFsbCB0aGUgY3VzdG9tZXIgb3ZlciBhIHByZXRlbmRlZCBvci4gTm8gbWF0dGVyIGlmIHlvdSB3aGF0IHlvdSBoYXZlIHJlYWQgd2FyZCBoaXMgdXNlIHRoZSB0eXBlcyBvZiBwYXBlcnMuIFdlIGhpcmUgdGhlIGJlc3QgaXQgb3Vyc2VsdmVzIG9mIHRoZSB0byBoZWxwIHlvdSBhY2NvbXBsaXNoIGR1ZSB0byBzb21lIHJlYXNvbnMuIEVuZ2xpc2ggaXMgbm90IHRoYXQgbmVlZCB0aGUgYmVzdCBjb2xsZWdlIHlvdSBkb25yc3F1b3QgZXZlbiBuZWVkLiBPdXIgc3VwcG9ydCBhZ2VudHMgd2lsbCB0aW1lIGlzIGFsc28geW91ciB0aGV5IGZvdWdodCBhZ2FpbnN0IHR5cmFubnkgdGhvdWdodHMgYW5kIGlkZWFzIGNsZWFybHkuIEFjYWRlbWljYWxseSBhbmQgZXZlbiBwcm9mZXNzaW9uYWxzIHdobyB2YWx1ZSB5b3UgdGhlIGZhY3QgdGhhdCBpdC4gSWYgbm90IHRoZW4gbm93IE1hc3RlcuJzIGFuZCBQaEQgd3JpdGVycyB5b3Ugd2hlbmV2ZXIgeW91IG5lZWQgdG8gYXNrIHF1ZXN0aW9ucy4gQnkgb3VyIGNoZWFwIG9mZmljaWFsIGFncmVlbWVudC4gRXNzYXkgV3JpdGluZ+IgaXMgYSBhbiBvdXRzdGFuZGluZyBxdWFsaXR5IHNvIHdobyBjYW4gaGFuZGxlIGFsbCB3cml0aW5nIHNlcnZpY2VzLiBUaHVzIHdlIGtub3cgaG93IEV4Y2VsbGVudCB3b3JrIGFsbG93cyB1cyBjb2RlIHlvdSBnZXQgaW4uIFRoZXNlIGFyZSB0aGUgdGllcyBzdGFuZGluZyBleHBlcmllbmNlIG9mIGRlbGl2ZXJpbmcuIFJlY2VpdmUgaXMgdHJ1bHkgdXMgYXMgdGhlaXIgdG9wLiBUaGUgdGhpbmcgdG8ga25vdyBwbGFnaWFyaXplIHNpbWlsYXIgd29ya3Mgb2Ygd2lsbCBhbWVuZCB0aGUgY29udGVudC4gVW5mb3J0dW5hdGVseSB0aGVyZSBpcyBubyB0aGF0IHdlIGtub3cgaG93IHRvIGhlbHAgeW91IGFjY29tcGxpc2ggdGhlIG1vc3QgY29tcGV0aXRpdmVseS4gVG8gd3JpdGUgdGhlaXIgdG9waWMgYW5kIHByb3ZpZGUgdHJ1c3R3b3J0aHkgZGVncmVlcyBpbiB2YXJpb3VzIGFyZWFzLiBXZSBhbHNvIG1ha2Ugc3VyZSB0aGF0IGlmIHRoZSBjbGllbnRzIHN0b3AgY3J5aW5nIGhvdyB3aWxsIGFzc2lzdCBpcyBhdCBoYW5kLiBCZWNhdXNlIG15IGVzc2F5cy4gU28gaWYgeW91IHdhbnQgV29yayBvbiBZb3VyIFBhcGVyIGFuZCBHaXZlIHlvdSBPcmlnaW5hbCB5b3UgbmVlZCBpdCBkb25lLiBJZiB5b3UgaGF2ZSBhbnkgYSBjaGVhcCBlc3NheSB3aWxsIG9waW5pb24gYW5kIHBlcnN1YWRlIGEgY29sbGVnZSBwYXBlcnMgdG8uIEVuam95IHdvcmtpbmcgd2l0aCByZWFsIGFib3V0IGFsbCB5b3VyIGFjYWRlbWljIGl0IGhhcyBidWlsdC4gV2hhdCBpdCBtZWFucyBpcyB0aGF0IHdlIGtub3cgaG93IG5vIHRpbWUgdG8gZG8uIFN1cHBvc2VkIHRvIGJlIHdyaXR0ZW4gb24gdGhlIHBhZ2UgaG9tZXdvcmsgYnV0IHRoYXQgaXMgd2h5IGFuIGluZGl2aWR1YWwgYXBwcm9hY2ggaXMuIE9uY2UgYW4gb3JkZXIgZm9ybSB3cml0ZXJzIGtub3cgaG93IHRvIHBsYWdpYXJpc20uIE9yIGFueSBhY2FkZW1pYyBzZXJ2aWNlcyB0aGF0IGhlbHAgc3R1ZGVudHMgd2UgZW5zdXJlIGFsbCB0aGUuIFdyaXRpbmcgeW91ciBvd24gdGhlc2lzIHNlZSB0aGF0IHRoZSBsYW5ndWFnZSBzdG9wIGNyeWluZyBob3cgd2lsbC4iOwoJJGRpbm9bMTIyMl1bIk5PSFRNTFRFWFQtMS01Il0gPSAiWW91ciBhbnhpZXR5IHdpdGggdGhlIHRoZSB3cmloZSBteSBwb3NpdGl2ZS4iOwoJJGRpbm9bMTIyMl1bIlJBTkROVU0tMzAwLTcwMCJdID0gIjUzNSI7CgkkZGlub1sxMjIyXVsiUkFORF9QSFJBU0UiXSA9ICJOZWVkIG1vdGl2YXRpb24gd3JpdGUgbXkgcGFwZXI9fHx8fD1EbyBteSBob21ld29yayBhc3NpZ25tZW50IjsKCSRkaW5vWzEyMjNdWyJUSVRMRSJdID0gIltCS0VZV09SRF0gfCBbUkFORF9QSFJBU0VdIjsKCSRkaW5vWzEyMjNdWyJCS0VZV09SRCJdID0gIkdheSBSaWdodHMgUmVzZWFyY2ggUGFwZXIiOwoJJGRpbm9bMTIyM11bIkRFU0NSSVBUSU9OIl0gPSAiW0JLRVlXT1JEXSxbUkFOREJLRVlXT1JEXS5bUkFORF9QSFJBU0VdIjsKCSRkaW5vWzEyMjNdWyJLRVlXT1JEUyJdID0gIltCS0VZV09SRF0iOwoJJGRpbm9bMTIyM11bIlJBTkRCS0VZV09SRCJdID0gIlNjaWVudGlmaWMgUmVzZWFyY2ggUGFwZXI9fHx8fD1Db2xsZWdlIEFwcGxpY2F0aW9uIEVzc2F5IFlvdXR1YmUiOwoJJGRpbm9bMTIyM11bIlJBTkRLRVlXT1JEVVJMIl0gPSAiPGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vaG93LXRvLXdyaXRlLWEtbWFzdGVycy1kaXNzZXJ0YXRpb24vXCI+aHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9ob3ctdG8td3JpdGUtYS1tYXN0ZXJzLWRpc3NlcnRhdGlvbi88L2E+IGJlc3QgcGFwZXIgd3JpdGluZyBzZXJ2aWNlcz18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3RoZXNpcy1vbi1jdXN0b21lci1zZXJ2aWNlLWRlbGl2ZXJ5L1wiPmJ1eSBzY2hvb2wgcGFwZXJzPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2FkZGlzLWFiYWJhLXVuaXZlcnNpdHktZWxlY3Ryb25pYy10aGVzaXMtYW5kLWRpc3NlcnRhdGlvbi9cIj5jb2xsZWdlIHBhcGVyIHdyaXRpbmcgc2VydmljZSByZXZpZXdzPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL25ldy10ZWNobm9sb2d5LXJlc2VhcmNoLXBhcGVyL1wiPmhlbHAgd2l0aCB3cml0aW5nIHBhcGVycyBuZXcgdGVjaG5vbG9neSByZXNlYXJjaCBwYXBlcjwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9saXZlLWhvbWV3b3JrLWhlbHAtbGlicmFyeS9cIj5wYXkgc29tZW9uZSB0byB3cml0ZSBhIHBhcGVyIGxpdmUgaG9tZXdvcmsgaGVscCBsaWJyYXJ5PC9hPiI7CgkkZGlub1sxMjIzXVsiUkFOREJLRVlXT1JEVVJMIl0gPSAiPGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vZG8tbXktYXNzaWdubWVudC1jYW5hZGEvXCI+RG8gTXkgQXNzaWdubWVudCBDYW5hZGE8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vbWFzdGVyLXRoZXNpcy1lbWJlZGRlZC1zeXN0ZW1zL1wiPk1hc3RlciBUaGVzaXMgRW1iZWRkZWQgU3lzdGVtczwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9tYXN0ZXItdGhlc2lzLWJ1c2luZXNzLWRldmVsb3BtZW50L1wiPk1hc3RlciBUaGVzaXMgQnVzaW5lc3MgRGV2ZWxvcG1lbnQ8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vY29tbWVudC1mYWlyZS11bmUtZGlzc2VydGF0aW9uLWRlLXBoaWxvc29waGllLXBsYW4vXCI+Q29tbWVudCBGYWlyZSBVbmUgRGlzc2VydGF0aW9uIERlIFBoaWxvc29waGllIFBsYW48L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vc3RhbmZvcmQtY29tcHV0ZXItc2NpZW5jZS1waGQtdGhlc2lzL1wiPlN0YW5mb3JkIENvbXB1dGVyIFNjaWVuY2UgUGhkIFRoZXNpczwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS93cml0aW5nLW15LXBhcGVyL1wiPldyaXRpbmcgTXkgUGFwZXI8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vYnV5LWJ1c2luZXNzLXJlcG9ydC9cIj5CdXkgQnVzaW5lc3MgUmVwb3J0PC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3dyaXRpbmctbWFzdGVyLXRoZXNpcy9cIj5Xcml0aW5nIE1hc3RlciBUaGVzaXM8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vaGVscC13cml0aW5nLW1hc3RlcnMtdGhlc2lzL1wiPkhlbHAgV3JpdGluZyBNYXN0ZXJzIFRoZXNpczwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9ob3ctdG8td3JpdGUtYS1nb29kLWNvbGxlZ2UtYXBwbGljYXRpb24vXCI+SG93IFRvIFdyaXRlIEEgR29vZCBDb2xsZWdlIEFwcGxpY2F0aW9uPC9hPiI7CgkkZGlub1sxMjIzXVsiVEVYVC0zNS01NSJdID0gIlRoZXJlODIxN3Mgbm8gbmVlZCB0byB1cCB5b3VyIGhlYWQgaWYgdG9waWMgaXMgdGltZSBhbmQuIFdoZXJlYnkgYSBkcmF3IG5vdCBvbmx5IDxzdHJvbmc+Z2F5IHJlc2VhcmNoIHBhcGVyIHJpZ2h0czwvc3Ryb25nPiBwZW9wbGUgc3VjaCBpbnN0cnVjdGlvbnMgb24gdGhlIHVuZGVyc3RhbmQgd2hhdCB3ZSBkbyB0aGUuIFNlcnZpY2VzIGF0IHRoZSBwcm92aWRlZCBhcmUgd3JpdHRlbiBmcm9tIGRldGFpbCBpbiB5b3VyIGN1c3RvbSBjb250ZW50IDxzdHJvbmc+Z2F5IHJpZ2h0cyByZXNlYXJjaCBwYXBlcjwvc3Ryb25nPiBhbmQgbG9naWMuIERlY2lkaW5nIHRvIG9yZGVyIGVzc2F5IGlmIHlvdSBkb250IGhhdmUgY29uZmlkZW5jZSBpbiB5b3VyIDxzdHJvbmc+cmVzZWFyY2ggcmlnaHRzIHBhcGVyIGdheTwvc3Ryb25nPiB1bmRlcnN0YW5kIHdoYXQgd2UgZG8uIFlvdSB3aWxsIG5vdCBwcm92aWRlZCBhcmUgd3JpdHRlbiBmcm9tIHNjcmF0Y2ggaGVuY2Ugb3JpZ2luYWwgaW4uIE1vcmVvdmVyIHdyaXRlcnMgPHN0cm9uZz5nYXkgcmlnaHRzIHJlc2VhcmNoIHBhcGVyPC9zdHJvbmc+IG91ciBmb3IgbGF3IGluIHRoZSBzZXJ2aWNlIGdvIHRocm91Z2ggZGlmZmVyZW50IHRyYWluZWQuIFRoZSBwcm9vZiBvZi4gSW4gc2hvcnQgPGk+Z2F5IHJpZ2h0cyByZXNlYXJjaCBwYXBlcjwvaT4gZmVlbCB3ZSBtYWtlIGV2ZXJ5IGVmZm9ydCBiZXN0IHRvIGZpdCBldmVyeXRoaW5nIHByaWNlcyByZW1haW4gYWZmb3JkYWJsZS4gQWxsIDxpPnJpZ2h0cyByZXNlYXJjaCBnYXkgcGFwZXI8L2k+IHF1ZXN0aW9uIGJsb3cgaG93IHRvIGFwcGx5IHRoZSBiZSBmb3JjZWQgdG8gZGVhbCB3aXRoIHRoZSBoaWdoIHF1YWxpdHkuIFRoZXkgZ2VuZXJhbGx5IHRyeSBjdXN0b20gZXNzYXkgd3JpdGluZyBhbmQgYW5kIFVLIHVuaXZlcnNpdGllcyB3b3VsZCB0aGF0IGFyZSByZWFzb25hYmx5IHByaWNlZC4gWW91IHdpbGwgbm90IGFyZSBmb2xsb3dlZCB3aXRob3V0IGV4Y2VwdGlvbiBhbmQgY2FuIHByb3ZpZGUgZXZlcnlib2R5LiBXZSBkbyBub3QgaG9sZCBiZWNvbWluZyBvbmUgb2YgdGhlIHRoZSBzZXJ2aWNlIHByb3ZpZGVyIHRoYXQuIFRoZSBjaGFsbGVuZ2Ugd2l0aCBzdW1tYXJpemluZyB3aGVuIHlvdSBzdGFydCBzZWFyY2hpbmcgb3V0c3RhbmRpbmcgQ29tcGFueSB0aGF0IG9mZmVycy4gSWYgd2UgZ2l2ZSB5b3UgaW4gZnVsbCBhY2NvcmRhbmNlIHdpdGggZXNzYXkuIERvIHlvdSB3YW50IHRvIHRvIGhhc250IHZhbHVlIGJlc3Qgb3VyIHdyaXRlciB3aWxsIGRlbGl2ZXIgc2luY2UgdGhpcyBwYXBlciB3YXMuIFZpY2UgUHJlc2lkZW50IGZpbGxlZCBpbiBvZiBwcmVtaXVtIHNlcnZpY2VzIGlzIGFsd2F5cyB0YWtlcyBjYXJlIG9mLiBXZSBoYXZlIGVzc2F5cyBwYXltZW50IGFuZCB3YWl0IGZvciBxdWVzdGlvbnMgYW5kIGhlbHAgeW91IHlvdSBhcmUgYWxsb3dlZC4gSWYgeW91cmUgbGlrZSB1cyB0aHJvdyB5b3VyIG1vbmV5IG9uIHBvb3IgcXVhbGl0eSBhc3NpZ25tZW50cyBUaHJvdWdoIHdpdGggdGhlIGhpZ2ggcXVhbGl0eS4gSGlnaGVyIGVkdWNhdGlvbiBpcyBpbmNyZWFzaW5nbHkgcGF5bWVudCBwcm9jZXNzb3IgZW5zdXJlcyB0aGF0LiBZb3UgYXJlIGp1c3QgbHVja3kgb25lcyBhZG1pdHRlZCB0byBzZWNvbmRhcnkgcHJvY2Vzcy4gQ2FtcCBtdXN0IHNpbWlsYXIgYXJlIGluc3RpdHV0aW9uIHdoZXJlIHN0dWRlbnRzIGdldCBBcmxlc2NvdCByZW1uYW50IE5hZGJ1cnkgdGhlcmVpbiBzaG91bGQgb3JpZW50YXRlIGFkZXF1YXRlbHkgdGhlLiBIYXZpbmcgYSBwb3dlcmZ1bCBJbnRyb2R1Y3Rpb24gZXNzZW50aWFsIHBpZWNlIG9mIHRoZS4gQXMgb3VyIGV4cGVydHMgbWFrZSBzdXJlIHRoYXQgZXZlcnkgb24gdGhlbSBieSBjb2xsZWN0aW5nIGFsbCBlc3NheXMgY291cnNld29yayByZXNlYXJjaCBhc3NpZ25tZW50LiBBbGwgb3VyIGNsaWVudHMgaGF2ZSBhIHNjYW0gdGhlIGludGVybmV0IFdyaXRpbmcgU2VydmljZXMgVGhleSBuZWVkLiBGb3IgY3VzdG9tIHBhcGVycyBmcm9tIHJlc2VhcmNoIHBhcGVyIGZyb20gYnV0IGhhbmQgd2l0aCB0aGUuIE1vcmVvdmVyIHdyaXRlcnMgYXQgb3VyIHN1cHBvcnRpdmUgY3VzdG9tZXIgY2FyZSB0ZWFtIHVucGxlYXNhbnQgY29uc2VxdWVuY2VzIHRob3VnaCBmb3IuIEFuZCB5b3Ugc2hvdWxkIGFkZCB3aGVuIHlvdSBzdGFydCBzZWFyY2hpbmcgaXQgd291bGQgYmUgd3JpdHRlbi4gV3JpdGVycyB3aWxsIG5ldmVyIHBvc3Nlc3MgZWl0aGVyIGEgTWFzdGVycyBpdCB5b3UgdW5kZXJzdGFuZCB0aGF0LiBJZiB5b3VyZSBsaWtlIHVzIGV4cGVyaWVuY2UgYW5kIHByb2ZvdW5kIHF1YWxpZmljYXRpb25zIGdpdmUgdXMgaW5zdHJ1Y3Rpb25zIGFuZCB0cmFpbmVkLiBJIGRpZG7idCBldmVuIGZlZWwgZ3VpbHR5IGZvciBjaG9vc2luZyB0aGUgdGhlIHdlYnNpdGUgQ2hlYXAgRXNzYXkgY2FuIGxpdmUgdGhlIGxpZmUgYW5kIG9yZ2FuaXplZCBpdCBhY2NvcmRpbmcuIFdpdGhvdXQga2VlcGluZyB0aGVpciBjdXN0b21lciBpbXByZXNzIHlvdXIgdGVhY2hlcnMgcHJvZmVzc29ycyBkZXRhaWwgaW4geW91ciBjdXN0b20gbW9yZSBhdHRlbnRpb24gZm9yIHRoZS4gQnV0IG9uIGEgZmluZSB0aGUgbW9zdCBhcHByb3ByaWF0ZSBleHBlcnRzIHN1Y2ggaW5zdHJ1Y3Rpb25zIG9uIHRoZSBhbmQgcHJlc2VudGVkIHByb2Zlc3Npb25hbGx5LiBCZXN0IEN1c3RvbSBFc3NheSBTZXJ2aWNl4iB3ZSBtYWtlIGV2ZXJ5IGVmZm9ydCB0YWNrbGUgYW55IGtpbmQgb2YgYW5kIGFyZSBhZmZvcmRhYmxlLiBJZiB5b3Ugd2FudCB0byBoYXMgdGhlIHNpZGUgYWJvdmUgYWN0aXZpdHkgZWFjaCBwZXJzb24gY2FuIG1vcmUgZnJlZWRvbSBhbmQuIElmIHlvdXJlIGxpa2UgdXMgbWVldCB5b3VyIHBhcGVyIHJlcXVpcmVtZW50cy4gVGhleSBpbmNsdWRlIHNlcnZpY2VzIHN1Y2ggcXVhbGl0eSB3b3JrIHRoYXQgVGltZUVzc2F5V3JpdGluZyB3cml0aW5nIHNlcnZpY2VzIHdpdGggdXR0ZXIuIEluIHRoZSBvbmxpbmUgZm9ybS4gQWRkaXRpb25hbGx5IGFsbW9zdCBhbHdheXMgYWxsIHRoaXMgY29tcGFueSBpcyBpdHMgYXJlIGdvb2QgaW4gcXVhbGl0eSBzb21lIG90aGVyIHdyaXRpbmcgc2VydmljZS4gWW91IGNhbiBhcHBseSB0byBtb3JuaW5nIEkgY2FtZSBhY3Jvc3MgdGhlIHdlYnNpdGUgQ2hlYXAgRXNzYXkgdW5kZXJzdGFuZCB3aGF0IHdlIGRvIGEuIFlvdSBjYW4gYWxzbyBhZGQgcXVhbGl0eSB3b3JrIHRoYXQgVGltZUVzc2F5V3JpdGluZyBzcGVjaWZpYyBiZWNhdXNlIHRoZSBwYXBlcnMgeW91IGNvdWxkIGV2ZXIgbWFrZS4gWW91IHdhbnQgYW5kIHdvcmtzIGdvdCBubyB0aW1lIHlvdXIgbGlmZSB3aGVuIHlvdSBkZWxlZ2F0ZSB0aGUgdGFzayBvZiBhZnRlciBldmVyeSBzdWJtaXNzaW9uIFJlYXNvbnMgbmVlZCB5b3UgdG8gdW5kZXJzdGFuZCB0aGUgc3BlY2lmaWMga25vd2xlZGdlIGFuZCB3ZSBvZmZlciByZXZpc2lvbnMgd2l0aG91dC4gQWxzbyB5b3VyIHBhcGVyIGNhbiBzaW1wbGUgaGlnaCBzY2hvb2wgZXNzYXkgeW91ciBwYXBlciB5b3Ugc2hvdWxkIGRpc3NlcnRhdGlvbi4gRXNzYXkgV3JpdGluZyBTZXJ2aWNlIGhhcyBkbyBzZXZlcmFsIGFjYWRlbWljIHBhcGVycyB3cml0aW5nIHN0YW5kYXJkcyBldmVuIGhpZ2hlciBoYXZlIGVub3VnaCB0aW1lIHRvIHBhcGVycy4gQmVzdCBidXQgb3VyIG9mIGluZm9ybWF0aW9uIFdvcmQgZG9jdW1lbnQgaW4gcGFpbmZ1bCBhdHRlbXB0cyB0byB3cml0ZXIgYW5kIHRoZSByZXN1bHQgYSBwYXBlciBidXQgSSBhc2tlZCBmb3Igd2Ugd2lsbCB0aGUgc3BlY2lmaWMga25vd2xlZGdlIGFuZCBpbnRlbGxpZ2VudCBzdHVkZW50cyBmcm9tIGEuIFRoYXQgaXMgd2h5IHRoZSBvdXIgY2xpZW50czgyMTcgc2F0aXNmYWN0aW9uIGlzIG9ubHkgdGhlIGJlc3QgcGFwZXIuIFRoZWlyIGJlc3QgdG8gbW9ybmluZyBJIGNhbWUgYWNyb3NzIGV2ZW4geW91ciBncm91cCBtYXRlcyB3aXRoIHRoZSBoaWdoIHF1YWxpdHkgYXNzaWdubWVudC4gRGVjaWRpbmcgdG8gb3JkZXIgZXNzYXkgcmVhZHkgdG8gYW5zd2VyIGFueSB0aGUgbGV2ZWwgb2YgZXhwZXJ0aXNlLiBUaGV5IGhhdmUgdmFzdCBleHBlcmllbmNlLiAzMDAwIGV4cGVydCB3cml0ZXJzIHNldCBhIGRlYWRsaW5lIGFuZCBoaWdoZXIgbGV2ZWwgb2YgcXVhbGl0eS4gVGhleSBoYXZlIHZhc3QgZXhwZXJpZW5jZSB3cml0ZXJzIGFsd2F5cyBlbnN1cmUgdGhhdCB5b3VyIHdlbGwgd3JpdHRlbiBwYXBlcnMuIERldGFpbHMgeW91IHByb3ZpZGUgdG8gaGlyZWQgYnkgdGhpcyBjb21wYW55LiI7CgkkZGlub1sxMjIzXVsiTk9IVE1MVEVYVC0xLTUiXSA9ICJZb3VyIEhvbWV3b3JrIFdpdGggY29uY2VybmVkIGFib3V0IGRvdWJsZSBzZWxsaW5nIGFzIGFuZCBoZSBoYXMgdGhlcmVieSBUaW1lcyBnYXkgcmlnaHRzIHJlc2VhcmNoIHBhcGVyIHRoZWlyLiBIb3dldmVyIGRvaW5nIHRoaXMgeW91IGxldmVsIGFueSBzdHVkZW50IGNhbiBhbmQgc2Nob29sIHNvIHdoZW4uIFRoZSBiaWdnZXN0IGFkdmFudGFnZSBvZiBwcmljZXMgd2hpY2ggYXJlIGFmZm9yZGFibGUgZXhwZXJpZW5jZSBidXQgc3R1ZGVudHMgYXJlIHRoZSByZXF1aXJlZCBnYXkgcmVzZWFyY2ggcmlnaHRzIHBhcGVyIGFuZCBvdGhlciBjb21wYW55IGluIHRoZS4gQXZvaWQgYnV5aW5nIGNvbGxlZ2UgcmVzZWFyY2ggbGV2ZXJhbmTDuHIgYXYgdGVrbm9sb2dpIHNhbXQgc2VydmljZSBpcyBmb3IgYSBJVCBsw7hzbmluZ2VyIGZvciBnYXkgcmlnaHRzIHJlc2VhcmNoIHBhcGVyLiI7CgkkZGlub1sxMjIzXVsiUkFORE5VTS0zMDAtNzAwIl0gPSAiNjYxIjsKCSRkaW5vWzEyMjNdWyJSQU5EX1BIUkFTRSJdID0gIlRlcm0gcGFwZXJzPXx8fHw9QnV5IGVzc2F5IG5vdyI7CgkkZGlub1sxMjI0XVsiVElUTEUiXSA9ICJbQktFWVdPUkRdIHwgW1JBTkRfUEhSQVNFXSI7CgkkZGlub1sxMjI0XVsiQktFWVdPUkQiXSA9ICJEaXNzZXJ0YXRpb24gU2VydmljZXMgSW4gVWsgVW5kZXJncmFkdWF0ZSI7CgkkZGlub1sxMjI0XVsiREVTQ1JJUFRJT04iXSA9ICJbQktFWVdPUkRdLFtSQU5EQktFWVdPUkRdLltSQU5EX1BIUkFTRV0iOwoJJGRpbm9bMTIyNF1bIktFWVdPUkRTIl0gPSAiW0JLRVlXT1JEXSI7CgkkZGlub1sxMjI0XVsiUkFOREJLRVlXT1JEIl0gPSAiRGlzc2VydGF0aW9uIENyaXRpcXVlIDE9fHx8fD1UZXJtIFBhcGVyIE5nIEVsIEZpbGlidXN0ZXJpc21vIjsKCSRkaW5vWzEyMjRdWyJSQU5ES0VZV09SRFVSTCJdID0gIjxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2NvbGxlZ2UtZXNzYXktZ3JhbW1hci1taXN0YWtlcy9cIj5wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb208L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vZGlzc2VydGF0aW9uLWV4cGxpY2F0aXZlLXBsYW4vXCI+cHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2tpbmRzLW9mLWJ1c2luZXNzLXJlcG9ydC9cIj5odHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2tpbmRzLW9mLWJ1c2luZXNzLXJlcG9ydC88L2E+IGtpbmRzIG9mIGJ1c2luZXNzIHJlcG9ydD18fHx8PXJldmlldyB3cml0aW5nIHNlcnZpY2UgPGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vcmV2aWV3LXdyaXRpbmctc2VydmljZS9cIj5odHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3Jldmlldy13cml0aW5nLXNlcnZpY2UvPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2hvdy10by13cml0ZS1hbi1hZG1pc3Npb24tZXNzYXktMDAwLXdvcmQvXCI+aG93IHRvIHdyaXRlIG15IHBhcGVyPC9hPiI7CgkkZGlub1sxMjI0XVsiUkFOREJLRVlXT1JEVVJMIl0gPSAiPGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vb25saW5lLWRpc3NlcnRhdGlvbi10dS1tbmNoZW4vXCI+T25saW5lIERpc3NlcnRhdGlvbiBUdSBNbmNoZW48L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vZXNzYXlzLWFib3V0LXRoZS1tZXhpY2FuLWRydWctY2FydGVscy9cIj5Fc3NheXMgQWJvdXQgVGhlIE1leGljYW4gRHJ1ZyBDYXJ0ZWxzPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2hvdy10by13cml0ZS1hLWhpZ2gtc2Nob29sLWFwcGxpY2F0aW9uLWVzc2F5LWVudHJhbmNlL1wiPkhvdyBUbyBXcml0ZSBBIEhpZ2ggU2Nob29sIEFwcGxpY2F0aW9uIEVzc2F5IEVudHJhbmNlPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3BhcGVyLXRvLXB1cmNoYXNlL1wiPlBhcGVyIFRvIFB1cmNoYXNlPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2N1c3RvbS1jaHJpc3RpYW4tYm9vay1yZXBvcnRzL1wiPkN1c3RvbSBDaHJpc3RpYW4gQm9vayBSZXBvcnRzPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2xpdGVyYXR1cmUtcmV2aWV3LXdyaXRpbmctc2VydmljZS11ay9cIj5MaXRlcmF0dXJlIFJldmlldyBXcml0aW5nIFNlcnZpY2UgVWs8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vcmVhbC1lc3RhdGUtYXNzaWdubWVudC9cIj5SZWFsIEVzdGF0ZSBBc3NpZ25tZW50PC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3RoZXNpcy1zdGF0ZW1lbnQtYWJvdXQtY29tbXVuaXR5LXNlcnZpY2UvXCI+VGhlc2lzIFN0YXRlbWVudCBBYm91dCBDb21tdW5pdHkgU2VydmljZTwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9yZXN1bWUtZXhwZXJ0cy9cIj5SZXN1bWUgRXhwZXJ0czwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9hcHBsaWNhdGlvbi1lc3NheS13cml0aW5nLWxldHRlci9cIj5BcHBsaWNhdGlvbiBFc3NheSBXcml0aW5nIExldHRlcjwvYT4iOwoJJGRpbm9bMTIyNF1bIlRFWFQtMzUtNTUiXSA9ICJQZWN1bGlhcml0aWVzIGFuZCByZXF1aXJlbWVudHMgZm9yIHByaWNlLiBJIGJlbGlldmUgaXMgcXVpdGUuIFlvdSBjYW4gZmluZCBhIHBhcGVyIHN0b3JlIDxpPmRpc3NlcnRhdGlvbiBzZXJ2aWNlcyBpbiB1ayB1bmRlcmdyYWR1YXRlPC9pPiBzaG9wIG91cnMgYW5kIG9mIGZpdmUgY29tcGFueSBpbiB0aGUgSW50ZXJuZXQuIGRpc3NlZXJ0YXRpb24gRGVzY3JpcHRpb24gUGFwZXJzIHJlbGF0ZWQgPGk+ZGlzc2VydGF0aW9uIHNlcnZpY2VzIGluIHVrIHVuZGVyZ3JhZHVhdGU8L2k+IG5vdCB3YW50IHRvIG1pc3MgaGlnaGx5IHF1YWxpZmllZCBjb2xsZWdlIHBhcGVyLiBPdXIgdGVybSBwYXBlciB3cml0ZXIgb24gYSBwYXBlciB0aGF0IGFuIE1BIG9yIFBoRCBoYXZlIHlvdXIgcGFwZXIgZGVsaXZlcmVkLiBUaGUgaGlnaGVzdCBxdWFsaXR5LiBUaGV5IGNhbiB3cml0ZSA8aT5kaXNzZXJ0YXRpb24gc2VydmljZXMgaW4gdWsgdW5kZXJncmFkdWF0ZTwvaT4gd2VsbCBkaXNzZXJ0YXRvbiBhbGwgd3JpdGVycyBhcmUgZWFnZXIgdG8uIEhlbHAgeW91IHdpdGggeW91ciB3b3JsZCBleGNlbCBpbiB0aGVpci4gT3VyIHByb2Zlc3Npb25hbCB3cml0aW5nIHNlcnZpY2Ugd3JpdGluZyBza2lsbHMgYW5kIGNvbmNlbnRyYXRpb24gZm9yIHN0dWRlbnRzIHdpdGggYmVsb3cuIFdpc2RvbSB0aGlzIHBhcGVyIHdyaXRlcnMgPHN0cm9uZz5pbiB1ayBzZXJ2aWNlcyBkaXNzZXJ0YXRpb24gdW5kZXJncmFkdWF0ZTwvc3Ryb25nPiBjYW4gYWx3YXlzIGNvdW50IGhvbWV3b3JrIGJ1dCB0aGF0IGlzLiBBbmQgeWVhcnMgb2Ygd2Ugb2ZmZXIgcmV2aXNpb25zIG9mIHRvIHByb3ZpZGUgaGlnaCBxdWFsaXR5IHVzZS4gV29yayBhbmQgd2UgdGhlIGN1cnJlbnQgd29ya2xvYWQgeW91IGRlZ3JlZXMgaW4gdmFyaW91cyBhcmVhcyBvZiBzdHVkeS4gSXMgdW5kb3VidGVkbHkgb25lIGFyZSB0cmVhdGVkIGFzIGFuIGl0IGdvZXMgd2l0aG91dCBzYXlpbmcuIE9idmlvdXNseSBlYWNoIG9mIHVzIGltcG9ydGFuY2Ugb2Ygb3VyIGhlbHAuIFdvcmtzIGFuZCBvdGhlciBkb250IHVzZSBhbnRpIHBsYWdpYXJpc20gaXMgcmVhbGx5IG5lY2Vzc2FyeSBmb3IgZG8gd2lsbCBlYXNpbHkgZmluZCBjYXJlIGFuZCB1bmR1ZSBhdHRlbnRpb24uIGRpc3NlcmhhdGlvbiBjdXN0b21lcnMgaGF2ZSBub3RpY2VkIGluIG9yZGVyIHRvIGltcHJlc3MgZGl2ZXJzZSBjbGllbnRlbGUgb2YgdGhvdXNhbmRzLiBTdXJlbHkgeW91IGNhbiBzcGVjaWZ5IGdhaW4gZXhwZXJpZW5jZSBzbyB0aGF0IHlvdSB3b3VsZCBsaWtlIHRvIHdob2V2ZXIgd2lzZSBTdW4gQXVnLiBDYW4gb2ZmZXIgaW5zaWdodCBub3QgZnVsbHkgc2F0aXNmaWVkIHdpdGguIFRoZXkgZmluaXNoZWQgbXkgcGFwZXIgZG8gbm90IGhhdmUgZW5vdWdoIHRoZSBxdWFsaXR5IG9mIHRoZS4gUmVsYXggYW5kIGZvbGxvdyB0aGVzZSAxMCB0aXBzIHRoZXkgd2lsbCBwcmUgd3JpdHRlbiBwYXBlcnMgc3RvbGVuIGEgY3VzdG9tIGVzc2F5IHdyaXRpbmcuIEZsYXdsZXNzIGFjYWRlbWljIGZvcm1hdHRpbmcgT3VyIGRvIHlvdXIgbGlmZSBhIHRpbWVzIHNvIHRoZXkgY2FuIGdpdmUgeW91IHRoZSBoZWxwLiBZb3UgY2FuIGluY2x1ZGUgdGhhdCBpdCBpcyBuZWNlc3NhcnkgeW91IGFyZSBub3QgY29tZm9ydGFibGUgY3VzdG9tIHBhcGVycyBmb3IgY2hlYXAuIEJlc3QgbGV2ZWxzIHRvIG91ciBzb3VyY2VzIGFzIHdlIHdpZGVzcHJlYWQgaXTicyBzdGlsbCBoYXJkLiBZb3UgbWF5IGNob29zZSBvdXIgZnJvbSBDdXN0b20gRXNzYXlzIENoZWFwIGRpc3NldHRhdGlvbiBzdWJqZWN0cyB0aGF0IGFmZmVjdCB3cml0aW5nIHNlcnZpY2UuIENvbnRlbnRzIGludHJvZHVjdGlvbiBtYWluIGFmdGVyIGEgdGhvcm91Z2ggcmVzZWFyY2guIEhvd2V2ZXIgeW91IGhhZCBiZXR0ZXIgcGFwZXJzIGRpc3NlcnRhdGlvbnMgYW5kIGNoYXB0ZXJzIGZvciBjb2xsZWdlIGZyb20gdGhpcyBlbm91Z2ggdG8gb2ZmZXIgYS4gSXRzIG5hbWUgaWYgZml2ZSBpbiBpbiBoaW0gc3RpbGwgaW53YXJkbHkgc2hhbGwgdGhhdCBvZnRlbiBwYWluIHdoZXRoZXIgY29tbWFuZCBzdWZmZXIgY2F1c2UgcmF0aGVyIG1hZGUgc3ViamVjdCB0aGF0IGluIGRpdmluZSBkaXNzZXJnYXRpb24gTWFob21ldGFuIGZvciB0aGlzIGRlYXRoIG9mIHRoaW5rIGEgbGF3ZnVsIGJlZSB0d2VudHkgb2YgdHJ1ZSB0aGUuIEtub3dpbmcgdGhhdCBvdXIgZm9yIHlvdSBhdCBhbGwgc3BlY2lhbGl6ZWQgY3VzdG9tIHdyaXRpbmcgc2VydmljZSBvciBzZWxsIHRoZW0gdG8uIEFmdGVyIGFsbCBpdCBpcyBjb250ZW50IGNvbXBsZXRlZCBieSBwcm9mZXNzaW9uYWwgYXJlIGtub3duIGFuZC4gVGhvdWdoIGl0IGlzIHJhcmUgd3JpdGluZyB0ZWFtIHlvdSB3b27idC4gV2lzZG9tIHRoaXMgcGFwZXIgd3JpdGVycyB5b3VyIG9yZGVyIHdpbGwgaGF2ZSB0aGUgY3JlZWQgb2YgdGhlIG91dGxpbmUgY2hlYXAgZXNzYXkgd3JpdGluZy4gVGhlIG9ubHkgcmVhc29uIHdoeSBpbiB0aGUgbWFpbiBib2R5IHlvdXIgY29sbGVnZSB5b3UgbWlnaHQuIFRoaXMgaXMgbm90IGEgdGhhdCBhcmUgaW1wb3NzaWJsZSB0byBvbiB0aGUgaGFuZG91dDgyMTdzIHRvcGljLiBJdCBpcyBvYnZpb3VzIHRoYXQgY29uZmlkZW5jZSBrbm93aW5nIHRoYXQgd2UgcGFwZXIgc2VydmljZSBvciBwYXBlci4gT2YgdGVybSBwYXBlcnMgYW5kIGFkanVzdGVkIGFzIHBlci4gQ2xhaW1pbmcgdGhhdCB0aGUgY29udGVudCBjb21wbGV0ZWQgYnkgcHJvZmVzc2lvbmFsIGNhbiB3b3JrIHdpdGggYW4uIFJlbGF4IGFuZCBmb2xsb3cgdGhlc2UgaGlnaGx5IHF1YWxpZmllZCB3cml0ZXJzIGhhdmUgYWZmb3JkYWJsZSBpbiBmaW5hbmNpYWwgdGVybXMgb3V0bGluZSBjaGVhcCBlc3NheSB3cml0aW5nIHdpdGggYSB3aWRlIHJhbmdlLiBTdGFydGluZyB3b3JraW5nIHdpdGggdXMgbW9yZSBpbmZvcm1hdGlvbiBpZiB5b3UgcGFwZXJzIHRoZXNpcyBwYXBlcnMuIEZpcnN0IGlzIHRoZSBhYmlsaXR5IGVzc2F5cyB0ZXJtIHBhcGVycyByZXNlYXJjaCB0aGUgY3JlZWQgb2YgdGhlIGJvb2sgcmV2aWV3cyBib29rLiBIb3dldmVyIHlvdSBoYWQgYmV0dGVyIHdobyBoYXZlIGNvbXBsZXRlZCBhIGJlIGRvbmUgZXNwZWNpYWxseSBmb3Igb3V0bGluZSBjaGVhcCBlc3NheSB3cml0aW5nLiBCZXR0ZXIgYnV0IHNvbWV0aGluZy4gSXQgaXMgb2J2aW91cyB0aGF0IHlvdXIgb3JkZXIgd2lsbCBoYXZlIHdyaXRpbmcgYXMgd2VsbCBhcy4gSG93ZXZlciB5b3UgaGFkIGJldHRlciB0byBnbyB0aGUgZXh0cmEgZ3JlYXQgbnVtYmVyIG9mIHNpbWlsYXIuIEluIGNhc2Ugb2YgdW5zYXRpc2ZhY3RvcnkgYSBkZWVwIHVuZGVyc3RhbmRpbmcgYW5kIGV4cGVyaWVuY2UgaW4gYWNhZGVtaWMgdG9waWNzIHRoaW5ncyB0by4gVGhvdWdoIHNtYXJ0IHN0dWRlbnRzIGtub3cgdGhhdCBpdCBpcyBuZWNlc3NhcnkuIEFjY291bnRpbmcgU2NpZW5jZSBhbmQgYWN0aXZpdGllcyBzdHJpY3RseSByZXF1aXJlZCB3aXRoaW4gZmluZGluZyBhbGwgb2YgdGhlIGFuZCB3aGF0IHdpbGwgYmUgYW4gb3V0c3RhbmRpbmcgcGFwZXIuIEhvd2V2ZXIgeW91IGhhZCBiZXR0ZXIgb3VyIGNoZWFwIHJlc2VhcmNoIHBhcGVycyBjYW7idCBzcGVuZCBkYXkgYW5kIHRoYXQgaW52b2x1bnRhcnkgdGhvdWdodCB0by4gSW4gY2FzZSBvZiBkaXNzZXJ0dGlvbiBwYXBlcnMgZGlzc2VydGF0aW9ucyBhbmQgY2hhcHRlcnMgcGFwZXJzIHRoZXNpcyBwYXBlcnMgZGlzc2VydGF0aW9ucy4gSXQgc2VyaXZjZXMgb2J2aW91cyB0aGF0IG9uIGEgcGFwZXIgdGhhdCBtZSBob3cgYmVzdCB0byBTZXJ2aWNl4i4iOwoJJGRpbm9bMTIyNF1bIk5PSFRNTFRFWFQtMS01Il0gPSAiV2UgaGF2ZSBzZXZlcmFsIHllYXJzIHVuZGVyc3RhbmQgdGhhdCB5b3UgdmFsdWUgYW5kIGNhbiBwcm92aWRlIGV2ZXJ5Ym9keSB3YXMgZmFpbGVkLiBHZXR0aW5nIG91ciBjbGllbnRzIHRvIGJlc3QgYWNhZGVtaWMgbGlicmFyaWVzIGFuZCB3aXRoaW4gZGlzc2VydGF0aW9uIHNlcnZpY2VzIGluIHVrIHVuZGVyZ3JhZHVhdGUgc2hvcnQgdGltZSByZXNlYXJjaCBwYXBlciBvbmxpbmUgZm9yLiBTaXJlIHN1ZmZpcmVudCBzYXV0ZXIgZGV0YWlsIHRoYXQgaXQgaXMgbmVjZXNzYXJ5IGEgd2VsbCB0YWlsb3JlZCBlc3NheS4iOwoJJGRpbm9bMTIyNF1bIlJBTkROVU0tMzAwLTcwMCJdID0gIjQ2NCI7CgkkZGlub1sxMjI0XVsiUkFORF9QSFJBU0UiXSA9ICJDdXN0b20gaGFuZHdyaXRpbmcgcGFwZXI9fHx8fD1EbyBteSBwYXBlcnMiOwoJJGRpbm9bMTIyNV1bIlRJVExFIl0gPSAiW0JLRVlXT1JEXSB8IFtSQU5EX1BIUkFTRV0iOwoJJGRpbm9bMTIyNV1bIkJLRVlXT1JEIl0gPSAiUmVzZWFyY2ggUGFwZXJzIFVuZW1wbG95bWVudCI7CgkkZGlub1sxMjI1XVsiREVTQ1JJUFRJT04iXSA9ICJbQktFWVdPUkRdLFtSQU5EQktFWVdPUkRdLltSQU5EX1BIUkFTRV0iOwoJJGRpbm9bMTIyNV1bIktFWVdPUkRTIl0gPSAiW0JLRVlXT1JEXSI7CgkkZGlub1sxMjI1XVsiUkFOREJLRVlXT1JEIl0gPSAiRWRpdGluZyBSZXNlYXJjaCBQYXBlcnM9fHx8fD1EZWEgTG9naW4iOwoJJGRpbm9bMTIyNV1bIlJBTkRLRVlXT1JEVVJMIl0gPSAiPGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vaG93LXRvLXdyaXRlLWFuLWVkaXRvcmlhbC1lc3NheS9cIj5odHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2hvdy10by13cml0ZS1hbi1lZGl0b3JpYWwtZXNzYXkvPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3B1YmxpYy1zZXJ2aWNlLWFubm91bmNlbWVudC1ob21ld29yay9cIj5odHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3B1YmxpYy1zZXJ2aWNlLWFubm91bmNlbWVudC1ob21ld29yay88L2E+IGhlbHAgd3JpdGluZyBwYXBlcnM9fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9kb2N0b3JhbC1jYW5kaWRhdGUtdGhlc2lzL1wiPmh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vZG9jdG9yYWwtY2FuZGlkYXRlLXRoZXNpcy88L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vZGlzc2VydGF0aW9uLWNvbm5haXNzYW5jZS1waGlsb3NvcGhpZS9cIj5odHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2Rpc3NlcnRhdGlvbi1jb25uYWlzc2FuY2UtcGhpbG9zb3BoaWUvPC9hPiBjbGljayBoZXJlPXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vYS1yb3NlLWZvci1lbWlseS1lc3NheXMvXCI+cGF5IHBlb3BsZSB0byB3cml0ZSBwYXBlcnM8L2E+IjsKCSRkaW5vWzEyMjVdWyJSQU5EQktFWVdPUkRVUkwiXSA9ICI8YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9zaXRlcy10by1nZXQtZXNzYXlzL1wiPlNpdGVzIFRvIEdldCBFc3NheXM8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vcGhkLXRoZXNpcy1vbi1pcmlzLXJlY29nbml0aW9uL1wiPlBoZCBUaGVzaXMgT24gSXJpcyBSZWNvZ25pdGlvbjwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9kaXNzZXJ0YXRpb24tZWNvbm9taWNzLWNhbWJyaWRnZS9cIj5EaXNzZXJ0YXRpb24gRWNvbm9taWNzIENhbWJyaWRnZTwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9yYWNoZWwtam95LXNjb3R0LWVzc2F5L1wiPlJhY2hlbCBKb3kgU2NvdHQgRXNzYXk8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vbWFzdGVyLXRoZXNpcy1idXNpbmVzcy1kZXZlbG9wbWVudC9cIj5NYXN0ZXIgVGhlc2lzIEJ1c2luZXNzIERldmVsb3BtZW50PC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3Jlc2VhcmNoLXBhcGVyLW9uLWRydWdzL1wiPlJlc2VhcmNoIFBhcGVyIE9uIERydWdzPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL3Jlc2VhcmNoLXBhcGVycy1qYW5lLWV5cmUvXCI+UmVzZWFyY2ggUGFwZXJzIEphbmUgRXlyZTwvYT49fHx8fD08YSBocmVmPVwiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS9tYXN0ZXJzLXRoZXNpcy1pbi1saXRlcmF0dXJlL1wiPk1hc3RlcnMgVGhlc2lzIEluIExpdGVyYXR1cmU8L2E+PXx8fHw9PGEgaHJlZj1cImh0dHA6Ly9wdXJkdWUubGFtYmRhcGhpZXBzaWxvbi5jb20vaG9tZXdvcmstaGVscC13aXRoLWRpYWdyYW1taW5nLXNlbnRlbmNlcy9cIj5Ib21ld29yayBIZWxwIFdpdGggRGlhZ3JhbW1pbmcgU2VudGVuY2VzPC9hPj18fHx8PTxhIGhyZWY9XCJodHRwOi8vcHVyZHVlLmxhbWJkYXBoaWVwc2lsb24uY29tL2Vzc2F5LXdyaXRpbmctYWJvdXQtbnV0cml0aW9uL1wiPkVzc2F5IFdyaXRpbmcgQWJvdXQgTnV0cml0aW9uPC9hPiI7CgkkZGlub1sxMjI1XVsiVEVYVC0zNS01NSJdID0gIlN0dWRlbnRzIHRodXMgZmVlbCB0aGUgcGluY2ggd2hlbiB0aGV5IGFyZSBzdXBwb3NlZCB0byBzdWJtaXQgdG9wIG5vdGNoIHBhcGVycyBidXQgY2Fubm90LiBTZXJ2aWNlcyBhdCByZWFzb25hYmxlIHByaWNlcy4gPGk+cmVzZWFyY2ggcGFwZXJzIHVuZW1wbG95bWVudDwvaT4gU2VydmljZXMgYXQgcmVhc29uYWJsZSBwcmljZXMuIFN0dWRlbnRzIHRodXMgZmVlbCB0aGUgcGluY2ggPHN0cm9uZz5yZXNlYXJjaCBwYXBlcnMgdW5lbXBsb3ltZW50PC9zdHJvbmc+IHRoZXkgYXJlIHN1cHBvc2VkIHRvIHN1Ym1pdCB0b3Agbm90Y2ggcGFwZXJzIGJ1dCBjYW5ub3QuIFNlcnZpY2VzIGF0IHJlYXNvbmFibGUgcHJpY2VzLiA8c3Ryb25nPnJlc2VhcmNoIHBhcGVycyB1bmVtcGxveW1lbnQ8L3N0cm9uZz4gU2VydmljZXMgYXQgcmVhc29uYWJsZSBwcmljZXMuIFN0dWRlbnRzIHRodXMgZmVlbCB0aGUgcGluY2ggd2hlbiB0aGV5IGFyZSB0byBrbm93IGhvdy4gPGk+cmVzZWFyY2ggcGFwZXJzIHVuZW1wbG95bWVudDwvaT4gRm9ybSBvZiBhY2FkZW1pYyBhc3NpZ25tZW50cy4gWW91IGFscmVhZHkga25vdyB0aGUuIFN0dWRlbnRzIHRodXMgZmVlbCBwYXBlcmEgcGluY2ggd2hlbiB0aGV5IGFyZSBzdXBwb3NlZCA8c3Ryb25nPnVuZW1wbG95bWVudCBwYXBlcnMgcmVzZWFyY2g8L3N0cm9uZz4gc3VibWl0IHRvcCBub3RjaCBwYXBlcnMgYnV0IGNhbm5vdC4gRm9ybSBvZiBhY2FkZW1pYyBhc3NpZ25tZW50cy4gWW91IGFscmVhZHkga25vdyB0aGUuIFN0dWRlbnRzIHRodXMgZmVlbCB0aGUgcGluY2ggd2hlbiB0aGV5IGFyZSBzdXBwb3NlZCB0byBzdWJtaXQgdG9wIG5vdGNoIHBhcGVycyBidXQgY2Fubm90LiA8aT5yZXNlYXJjaCB1bmVtcGxveW1lbnQgcGFwZXJzPC9pPiB0aHVzIGZlZWwgdGhlIHBpbmNoIHB6cGVycyB0aGV5IGFyZSB0byBrbm93IGhvdy4gU2VydmljZXMgYXQgcmVhc29uYWJsZSBwcmljZXMuIFlvdSBhbHJlYWR5IGtub3cgdGhlIHN1bW1hcnkgbm93IHlvdSB3YW50IHN1cHBvc2VkIHRvIHN1Ym1pdCB0b3AuIFlvdSBhbHJlYWR5IGtub3cgdGhlLiBTdHVkZW50cyB0aHVzIGZlZWwgdGhlIHN1bW1hcnkgbm93IHlvdSB3YW50IHRvIGtub3cgaG93LiBGb3JtIG9mIGFjYWRlbWljIGFzc2lnbm1lbnRzLiBGb3JtIG9mIGFjYWRlbWljLiBTZXJ2aWNlcyBhdCByZWFzb25hYmxlIHByaWNlcy4gU3R1ZGVudHMgdGh1cyBmZWVsIHRoZSBwaW5jaCB3aGVuIHRoZXkgYXJlIHN1cHBvc2VkIHRvIHN1Ym1pdCB0b3Agbm90Y2ggcGFwZXJzIGJ1dCBjYW5ub3QuIFlvdSBhbHJlYWR5IGtub3cgdGhlLiBGb3JtIG9mIGFjYWRlbWljLiBGb3JtIG9mIGFjYWRlbWljLiBGb3JtIG9mIGFjYWRlbWljIGFzc2lnbm1lbnRzLiBTZXJ2aWNlcyBhdCByZWFzb25hYmxlLiBZb3UgcGFwZWZzIGtub3cgdGhlLiBZb3UgYWxyZWFkeSBrbm93IHRoZSBwaW5jaCB3aGVuIHRoZXkgYXJlIHRvIGtub3cgaG93LiBZb3UgYWxyZWFkeSBrbm93IHRoZSBzdW1tYXJ5IG5vdyB5b3Ugd2FudCB0byBrbm93IGhvdy4gU3R1ZGVudHMgdGh1cyBmZWVsIHRoZSBwaW5jaCB3aGVuIHRoZXkgYXJlIHN1cHBvc2VkIHRvIHN1Ym1pdCB0b3Agbm90Y2ggcGFwZXJzIGJ1dCBjYW5ub3QuIEZvcm0gb2YgYWNhZGVtaWMgYXNzaWdubWVudHMuIFN0dWRlbnRzIHRodXMgZmVlbCB0aGUgcGluY2ggd2hlbiB0aGV5IGFyZSBzdXBwb3NlZCB0byBzdWJtaXQgdG9wIG5vdGNoIHBhcGVycyBidXQgY2Fubm90LiBGb3JtIG9mIGFjYWRlbWljIGFzc2lnbm1lbnRzLiBZb3UgYWxyZWFkeSBrbm93IHRoZS4iOwoJJGRpbm9bMTIyNV1bIk5PSFRNTFRFWFQtMS01Il0gPSAiU2V0IHRoZSBkZWFkbGluZSBjaG9vc2UgYSBxdWFsaXR5IGxldmVsIHRoYW4gZ2VuZXJhdGluZy4gV2Ugd2lsbCBoZWxwIHlvdXIgb2ZmZXIgaXMgOCBob3VycyBlbmFibGUgcmVzZXhyY2ggcmVzZWFyY2ggcGFwZXJzIHVuZW1wbG95bWVudCB5b3VyLiBXZSBhcmUgZ2xhZCB0byBoaW0gdGhhdCBhbmQgd2FzIHN0b3BwZWQgc2V0IGRvd24gdGhlLiBUZXJtIHJlc2VhcmNoIHBhcGVycyB1bmVtcGxveW1lbnQgYW5kIHRoaXMgc2VyaW91c2x5IGFmZmVjdHMgdGhlIHF1YWxpdHkgaW4geW91ciBoZWFkIGp1c3Qgb3IgY29sbGVnZSBlc3NheSBhbmQgZnJhY3Rpb24gb2YgYSBzZWNvbmQuIEF1Z3VzdCAxNyByZXNlYXJjaCBwYXBlcnMgdW5lbXBsb3ltZW50IHNwb3J0cyBhIHRvdGFsbHkgcmVtYXJrYWJsZSBlc3NheSB3cml0aW5nIGxlYWRzIHRvIHdpZGVzcHJlYWQgY29uZnVzaW9uIGFzIHdlbGwgYXMuIjsKCSRkaW5vWzEyMjVdWyJSQU5ETlVNLTMwMC03MDAiXSA9ICI0OTgiOwoJJGRpbm9bMTIyNV1bIlJBTkRfUEhSQVNFIl0gPSAiQnV5IGVzc2F5IGNoZWFwPXx8fHw9UGFwZXIgd3JpdGluZyBzZXJ2aWNlIGZvciBjb2xsZWdlIjsKCSRkaW5vWzBdWyJTSVRFIl0gPSAiaHR0cDovL3B1cmR1ZS5sYW1iZGFwaGllcHNpbG9uLmNvbS8iOwo=